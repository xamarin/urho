<Type Name="RenderCommandType" FullName="Urho.RenderCommandType">
  <TypeSignature Language="C#" Value="public enum RenderCommandType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RenderCommandType extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>Urho</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
            Rendering path command types.
            </summary>
    <remarks>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="Clear" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Urho.RenderCommandType Clear = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.RenderCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Clear any of color, depth and stencil. Color clear can optionally use the fog color from the Zone visible at the far clip distance.</summary>
      </Docs>
    </Member>
    <Member MemberName="Forwardlights">
      <MemberSignature Language="C#" Value="Forwardlights" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Urho.RenderCommandType Forwardlights = int32(4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.RenderCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Render per-pixel forward lighting for opaque objects with the specified pass name. Shadow maps are also rendered as necessary.</summary>
      </Docs>
    </Member>
    <Member MemberName="Lightvolumes">
      <MemberSignature Language="C#" Value="Lightvolumes" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Urho.RenderCommandType Lightvolumes = int32(5)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.RenderCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Render deferred light volumes using the specified shaders. G-buffer textures can be bound as necessary.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Urho.RenderCommandType None = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.RenderCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="Quad">
      <MemberSignature Language="C#" Value="Quad" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Urho.RenderCommandType Quad = int32(3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.RenderCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Render a viewport-sized quad using the specified shaders and compilation defines. Textures can be bound and additionally shader parameters and the blend mode (default=replace) can be specified.</summary>
      </Docs>
    </Member>
    <Member MemberName="Renderui">
      <MemberSignature Language="C#" Value="Renderui" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Urho.RenderCommandType Renderui = int32(6)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.RenderCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Render the UI into the output rendertarget. Using this will cause the default %UI render to the backbuffer to be skipped.</summary>
      </Docs>
    </Member>
    <Member MemberName="Scenepass">
      <MemberSignature Language="C#" Value="Scenepass" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Urho.RenderCommandType Scenepass = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.RenderCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Render scene objects whose <see cref="T:Urho.Material" /> contains the specified pass. Will either be front-to-back ordered with state sorting, or back-to-front ordered with no state sorting. For deferred rendering, object lightmasks can be optionally marked to the stencil buffer. Vertex lights can optionally be handled during a pass, if it has the necessary shader combinations. Textures global to the pass can be bound to free texture units; these can either be the viewport, a named rendertarget, or a texture resource identified with its pathname.</summary>
      </Docs>
    </Member>
    <Member MemberName="Sendevent">
      <MemberSignature Language="C#" Value="Sendevent" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Urho.RenderCommandType Sendevent = int32(7)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.RenderCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
