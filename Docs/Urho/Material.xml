<Type Name="Material" FullName="Urho.Material">
  <TypeSignature Language="C#" Value="public class Material : Urho.Resources.Resource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Material extends Urho.Resources.Resource" />
  <AssemblyInfo>
    <AssemblyName>Urho</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Urho.Resources.Resource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Describes how to render 3D geometries.
            </summary>
    <remarks>
      <para>On the disk, they are XML data. Default and example materials exist in the bin/CoreData/Materials &amp; bin/Data/Materials subdirectories, and techniques exist in the bin/CoreData/Techniques subdirectory.</para>
      <para>A material defines the textures, shader parameters, the culling, fill mode to use, and refers to one or several techniques. A technique defines the actual rendering passes, the shaders to use in each, and all other rendering states such as depth test, depth write, and blending.</para>
      <para>A material definition looks like this</para>
      <code lang="XML"><![CDATA[<material>
    <technique name="TechniqueName" quality="q" loddistance="d" />
    <texture unit="diffuse|normal|specular|emissive|environment" name="TextureName" />
    <texture ... />
    <parameter name="name" value="x y z w" />
    <parameter ... />
    <cull value="cw|ccw|none" />
    <shadowcull value="cw|ccw|none" />
    <fill value="solid|wireframe|point" />
    <depthbias constant="x" slopescaled="y" />
</material>
]]></code>
      <para>
	  Several techniques can be defined for different quality
	  levels and LOD distances. Technique quality levels are specified
	  from 0 (low) to 2 (high). When rendering, the highest available
	  technique that does not exceed the <see cref="T:Urho.Renderer" />Â material quality
	  setting will be chosen, see <see cref="P:Urho.Renderer.MaterialQuality" />. It is also
	  possible for a technique to require Shader Model 3, in this case
	  it will be skipped on SM2 hardware.
	</para>
      <para>
	  The techniques for different LOD levels and quality settings must appear in a specific order:
	</para>
      <para>
	  Material shader parameters can be floats or vectors up to 4 components, or matrices.
	</para>
      <para>
	  Default culling mode is counterclockwise. The shadowcull
	  element specifies the culling mode to use in the shadow
	  pass. Note that material's depth bias settings do not apply
	  in the shadow pass; during shadow rendering the light's
	  depth bias is used instead.
	</para>
      <format type="text/html">
        <h2>Material Textures</h2>
      </format>
      <para>
	  Diffuse maps specify the surface color in the RGB
	  channels. Optionally they can use the alpha channel for
	  blending and alpha testing. They should preferably be
	  compressed to DXT1 (no alpha or 1-bit alpha) or DXT5 (smooth
	  alpha) format.
	</para>
      <para>
	  Normal maps encode the tangent-space surface normal for
	  normal mapping. There are two options for storing normals,
	  which require choosing the correct material technique, as
	  the pixel shader is different in each case:
	</para>
      <list type="bullet">
        <item>
          <term>
	      Store as RGB. In this case use the DiffNormal
	      techniques. This is the default used by AssetImporter, to
	      ensure no conversion of normal textures needs to happen.
	    </term>
        </item>
        <item>
          <term>
	      Store as xGxR, ie. Y-component in the green channel, and
	      X-component in the alpha. In this case use the
	      DiffNormalPacked techniques: Z will be reconstructed in
	      the pixel shader. This encoding lends itself well to
	      DXT5 compression. To convert normal maps to this format,
	      you can use AMD's The Compressonator utility, see
	      http://developer.amd.com/Resources/archive/ArchivedTools/gpu/compressonator/Pages/default.aspx
	    </term>
        </item>
      </list>
      <para>

	  Make sure the normal map is oriented correctly: an even
	  surface should have the color value R 0.5 G 0.5 B 1.0.
	</para>
      <para>

	  Models using a normal-mapped material need to have tangent
	  vectors in their vertex data; the easiest way to ensure this
	  is to use the switch -t (generate tangents) when using
	  either AssetImporter or OgreImporter to import models to
	  Urho3D format. If there are no tangents, the light
	  attenuation on the normal-mapped material will behave in a
	  completely erratic fashion.
	</para>
      <para>

	  Specular maps encode the specular surface color as RGB. Note that
	  deferred rendering is only able to use monochromatic specular
	  intensity from the G channel, while forward and light pre-pass
	  rendering use fully colored specular. DXT1 format should suit these
	  textures well.
	</para>
      <para>
	  
	  Textures can have an accompanying XML file which specifies
	  load-time parameters, such as addressing, mipmapping, and
	  number of mip levels to skip on each quality level:
	</para>
      <code lang="XML"><![CDATA[<texture>
    <address coord="u|v|w" mode="wrap|mirror|clamp|border" />
    <border color="r g b a" />
    <filter mode="nearest|bilinear|trilinear|anisotropic|default" />
    <mipmap enable="false|true" />
    <quality low="x" medium="y" high="z" />
    <srgb enable="false|true" />
</texture>]]></code>
      <para>

	  The sRGB flag controls both whether the texture should be
	  sampled with sRGB to linear conversion, and if used as a
	  rendertarget, pixels should be converted back to sRGB when
	  writing to it. To control whether the backbuffer should use
	  sRGB conversion on write, use the <see cref="P:Urho.Graphics.SRGB" /> property.
	</para>
      <format type="text/html">
        <h2>Material Textures</h2>
      </format>
      <para>

	  Using cube map textures requires an XML file to define the cube map
	  face textures or layout. In this case the XML file is the texture
	  resource name in material scripts or in LoadResource() calls.

	</para>
      <para>

	  Individual face textures are defined in the XML like this: (see bin/Data/Textures/Skybox.xml for an example)

	</para>
      <code lang="XML"><![CDATA[<cubemap>
    <face name="PositiveX_TextureName" />
    <face name="NegativeX_TextureName" />
    <face name="PositiveY_TextureName" />
    <face name="NegativeY_TextureName" />
    <face name="PositiveZ_TextureName" />
    <face name="NegativeZ_TextureName" />
</cubemap>]]></code>
      <para>
	  Using a single image texture and a layout is used like this:
	</para>
      <code lang="XML"><![CDATA[<cubemap>
    <image name="TextureName" layout="horizontal|horizontalnvidia|horizontalcross|verticalcross|blender" />
    </cubemap>]]></code>
      <para>
	  For the layout definitions, see http://www.cgtextures.com/content.php?action=tutorial&amp;name=cubemaps and http://en.wikibooks.org/wiki/Blender_3D:_Noob_to_Pro/Build_a_skybox
	</para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Material ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <para>Constructs a new instance of Urho.Material which is tied to the <see cref="P:Urho.Application.CurrentContext" />.</para>
        </summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Material (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer to the raw unmanaged Urho object.</param>
        <summary>Constructs a new instance of Urho.Material, given a raw pointer to an unmanaged object</summary>
        <remarks>
          <para>This creates a new managed wrapper for the type using the raw pointer to an unmanaged object.</para>
          <para>Objects that are created in this fashion get registered with the UrhoSharp runtime.</para>
          <para>This is intended to be used by the UrhoSharp runtime, and is not intended to be used by users.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Material (Urho.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Urho.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="Urho.Context" />
      </Parameters>
      <Docs>
        <param name="context">The context that this object will be attached to.</param>
        <summary>
          <para>Constructs a new instance of Urho.Material linked to a specific <see cref="T:Urho.Context" />.</para>
        </summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Material (Urho.UrhoObjectFlag emptyFlag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype Urho.UrhoObjectFlag emptyFlag) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="emptyFlag" Type="Urho.UrhoObjectFlag" />
      </Parameters>
      <Docs>
        <param name="emptyFlag">Pass UrhoObjectFlag.Empty.</param>
        <summary>Empty constructor, chain to this constructor when you provide your own constructor that sets the handle field.</summary>
        <remarks>
          <para>This constructor should be invoked by your code if you provide your own constructor that sets the handle field.</para>
          <para>This essentially circumvents the default path that creates a new object and sets the handle and does not call RegisterObject on the target, you must do this on your own constructor.</para>
          <para>You would typically chain to this constructor from your own, and then set the handle to the unmanaged object from your code, and then register your object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlphaToCoverage">
      <MemberSignature Language="C#" Value="public bool AlphaToCoverage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlphaToCoverage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuxViewFrameNumber">
      <MemberSignature Language="C#" Value="public uint AuxViewFrameNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 AuxViewFrameNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return last auxiliary view rendered frame number.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public override bool BeginLoad (Urho.IO.File source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool BeginLoad(class Urho.IO.File source) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Urho.IO.File" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public Urho.Material Clone (string cloneName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Urho.Material Clone(string cloneName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Material</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cloneName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cloneName">To be added.</param>
        <summary>
            Clone the material.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CullMode">
      <MemberSignature Language="C#" Value="public Urho.CullMode CullMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.CullMode CullMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.CullMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return normal culling mode.
            Or
            Set culling mode.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DepthBias">
      <MemberSignature Language="C#" Value="public Urho.BiasParameters DepthBias { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.BiasParameters DepthBias" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.BiasParameters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return depth bias.
            Or
            Set depth bias.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoad">
      <MemberSignature Language="C#" Value="public override bool EndLoad ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool EndLoad() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Finish resource loading. Always called from the main thread. Return true if successful.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillMode">
      <MemberSignature Language="C#" Value="public Urho.FillMode FillMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.FillMode FillMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.FillMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return polygon fill mode. Or Set polygon fill mode. Interacts with the camera's fill mode setting so that the "least filled" mode will be used. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromColor">
      <MemberSignature Language="C#" Value="public static Urho.Material FromColor (Urho.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Urho.Material FromColor(valuetype Urho.Color color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Material</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Urho.Color" />
      </Parameters>
      <Docs>
        <param name="color">Color to be used as a MatDiffColor</param>
        <summary>Creates a material using NoTexture or NoTextureAlpha <see cref="T:Urho.Technique" />Â with the specified color as a shader parameter "MatDiffColor".</summary>
        <returns>Material that contains the image and has been configured with the CoreAssets.Techniques.DiffÂ <see cref="T:Urho.Technique" />.</returns>
        <remarks>This is a shortcut to creating a new mateiral from specified color (lit). If the color has Alpha less than 1.0f, the NoTextureAlpha <see cref="T:Urho.Technique" />Â will be used, otherwise - NoTexture.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromColor">
      <MemberSignature Language="C#" Value="public static Urho.Material FromColor (Urho.Color color, bool unlit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Urho.Material FromColor(valuetype Urho.Color color, bool unlit) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Material</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Urho.Color" />
        <Parameter Name="unlit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <param name="unlit">To be added.</param>
        <summary>Creates a material from a given color. Unlit means the material won't be affected by any lights.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromImage">
      <MemberSignature Language="C#" Value="public static Urho.Material FromImage (string image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Urho.Material FromImage(string image) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Material</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="image">Name of an image that can be fetched from theÂ <see cref="T:Urho.Application.ResourceCache" />.</param>
        <summary>Creates a material from a 2D Texture.</summary>
        <returns>Material that contains the image and has been configured with the CoreAssets.Techniques.DiffÂ <see cref="T:Urho.Technique" />.</returns>
        <remarks>This is a shortcut to creating a new mateiral, setting the texture to TextureUnit.Diffuse on the 2D texture loaded from the cache with the name <paramref name="image" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromImage">
      <MemberSignature Language="C#" Value="public static Urho.Material FromImage (string image, string normals);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Urho.Material FromImage(string image, string normals) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Material</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.String" />
        <Parameter Name="normals" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="normals">To be added.</param>
        <summary>Create a material from an image and a normal map using DiffNormal technique.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPass">
      <MemberSignature Language="C#" Value="public Urho.Pass GetPass (uint index, string passName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Urho.Pass GetPass(unsigned int32 index, string passName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Pass</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="passName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="passName">To be added.</param>
        <summary>
            Return pass by technique index and pass name.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShaderParameterAnimation">
      <MemberSignature Language="C#" Value="public Urho.ValueAnimation GetShaderParameterAnimation (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Urho.ValueAnimation GetShaderParameterAnimation(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.ValueAnimation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>
            Return shader parameter animation.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShaderParameterAnimationSpeed">
      <MemberSignature Language="C#" Value="public float GetShaderParameterAnimationSpeed (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 GetShaderParameterAnimationSpeed(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>
            Return shader parameter animation speed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShaderParameterAnimationWrapMode">
      <MemberSignature Language="C#" Value="public Urho.WrapMode GetShaderParameterAnimationWrapMode (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Urho.WrapMode GetShaderParameterAnimationWrapMode(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.WrapMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>
            Return shader parameter animation wrap mode.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTechnique">
      <MemberSignature Language="C#" Value="public Urho.Technique GetTechnique (uint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Urho.Technique GetTechnique(unsigned int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Technique</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>
            Return technique by index.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexture">
      <MemberSignature Language="C#" Value="public Urho.Texture GetTexture (Urho.TextureUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Urho.Texture GetTexture(valuetype Urho.TextureUnit unit) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Texture</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="Urho.TextureUnit" />
      </Parameters>
      <Docs>
        <param name="unit">To be added.</param>
        <summary>
            Return texture by unit.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextureUnitName">
      <MemberSignature Language="C#" Value="public static string GetTextureUnitName (Urho.TextureUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTextureUnitName(valuetype Urho.TextureUnit unit) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="Urho.TextureUnit" />
      </Parameters>
      <Docs>
        <param name="unit">To be added.</param>
        <summary>
            Return name for texture unit.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineAntiAlias">
      <MemberSignature Language="C#" Value="public bool LineAntiAlias { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LineAntiAlias" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public bool Load (Urho.Resources.XmlElement source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Load(class Urho.Resources.XmlElement source) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Urho.Resources.XmlElement" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkForAuxView">
      <MemberSignature Language="C#" Value="public void MarkForAuxView (uint frameNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MarkForAuxView(unsigned int32 frameNumber) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frameNumber" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="frameNumber">To be added.</param>
        <summary>
            Mark material for auxiliary view rendering.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumTechniques">
      <MemberSignature Language="C#" Value="public uint NumTechniques { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 NumTechniques" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return number of techniques.
            Or
            Set number of techniques.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Occlusion">
      <MemberSignature Language="C#" Value="public bool Occlusion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Occlusion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return whether should render occlusion.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseShaderParameterValue">
      <MemberSignature Language="C#" Value="public static Urho.Variant ParseShaderParameterValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Urho.Variant ParseShaderParameterValue(string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Variant</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
            Parse a shader parameter value from a string. Retunrs either a bool, a float, or a 2 to 4-component vector.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelShaderDefines">
      <MemberSignature Language="C#" Value="public string PixelShaderDefines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PixelShaderDefines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Set additional pixel shader defines. Separate multiple defines with spaces. Setting defines at the material level causes technique(s) to be cloned as necessary.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public static void RegisterObject (Urho.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterObject(class Urho.Context context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Urho.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
            Register object factory.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseShaders">
      <MemberSignature Language="C#" Value="public void ReleaseShaders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseShaders() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Reset all shader pointers.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveShaderParameter">
      <MemberSignature Language="C#" Value="public void RemoveShaderParameter (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveShaderParameter(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>
            Remove shader parameter.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderOrder">
      <MemberSignature Language="C#" Value="public byte RenderOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 RenderOrder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return render order.
            Or
            Set 8-bit render order within pass. Default 128. Lower values will render earlier and higher values later, taking precedence over e.g. state and distance sorting.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override bool Save (Urho.IO.File dest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Save(class Urho.IO.File dest) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="Urho.IO.File" />
      </Parameters>
      <Docs>
        <param name="dest">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public bool Save (Urho.Resources.XmlElement dest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Save(class Urho.Resources.XmlElement dest) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="Urho.Resources.XmlElement" />
      </Parameters>
      <Docs>
        <param name="dest">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scene">
      <MemberSignature Language="C#" Value="public Urho.Scene Scene { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Urho.Scene Scene" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Scene</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return the scene associated with the material for shader parameter animation updates.
            Or
            Associate the material with a scene to ensure that shader parameter animation happens in sync with scene update, respecting the scene time scale. If no scene is set, the global update events will be used.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShaderParameter">
      <MemberSignature Language="C#" Value="public void SetShaderParameter (string name, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetShaderParameter(string name, int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Set shader parameter.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShaderParameter">
      <MemberSignature Language="C#" Value="public void SetShaderParameter (string name, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetShaderParameter(string name, float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Set shader parameter.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShaderParameter">
      <MemberSignature Language="C#" Value="public void SetShaderParameter (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetShaderParameter(string name, string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Set shader parameter.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShaderParameter">
      <MemberSignature Language="C#" Value="public void SetShaderParameter (string name, Urho.Color value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetShaderParameter(string name, valuetype Urho.Color value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="Urho.Color" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Set shader parameter.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShaderParameter">
      <MemberSignature Language="C#" Value="public void SetShaderParameter (string name, Urho.IntRect value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetShaderParameter(string name, valuetype Urho.IntRect value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="Urho.IntRect" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Set shader parameter.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShaderParameter">
      <MemberSignature Language="C#" Value="public void SetShaderParameter (string name, Urho.IntVector2 value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetShaderParameter(string name, valuetype Urho.IntVector2 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="Urho.IntVector2" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Set shader parameter.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShaderParameter">
      <MemberSignature Language="C#" Value="public void SetShaderParameter (string name, Urho.Matrix3x4 value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetShaderParameter(string name, valuetype Urho.Matrix3x4 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="Urho.Matrix3x4" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>Set shader parameter. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShaderParameter">
      <MemberSignature Language="C#" Value="public void SetShaderParameter (string name, Urho.Matrix4 value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetShaderParameter(string name, valuetype Urho.Matrix4 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="Urho.Matrix4" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>Set shader parameter. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShaderParameter">
      <MemberSignature Language="C#" Value="public void SetShaderParameter (string name, Urho.Quaternion value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetShaderParameter(string name, valuetype Urho.Quaternion value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="Urho.Quaternion" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Set shader parameter.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShaderParameter">
      <MemberSignature Language="C#" Value="public void SetShaderParameter (string name, Urho.Vector2 value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetShaderParameter(string name, valuetype Urho.Vector2 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="Urho.Vector2" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Set shader parameter.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShaderParameter">
      <MemberSignature Language="C#" Value="public void SetShaderParameter (string name, Urho.Vector3 value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetShaderParameter(string name, valuetype Urho.Vector3 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Set shader parameter.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShaderParameter">
      <MemberSignature Language="C#" Value="public void SetShaderParameter (string name, Urho.Vector4 value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetShaderParameter(string name, valuetype Urho.Vector4 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="Urho.Vector4" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Set shader parameter.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShaderParameterAnimation">
      <MemberSignature Language="C#" Value="public void SetShaderParameterAnimation (string name, Urho.ValueAnimation animation, Urho.WrapMode wrapMode, float speed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetShaderParameterAnimation(string name, class Urho.ValueAnimation animation, valuetype Urho.WrapMode wrapMode, float32 speed) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="animation" Type="Urho.ValueAnimation" />
        <Parameter Name="wrapMode" Type="Urho.WrapMode" />
        <Parameter Name="speed" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="animation">To be added.</param>
        <param name="wrapMode">To be added.</param>
        <param name="speed">To be added.</param>
        <summary>
            Set shader parameter animation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShaderParameterAnimationSpeed">
      <MemberSignature Language="C#" Value="public void SetShaderParameterAnimationSpeed (string name, float speed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetShaderParameterAnimationSpeed(string name, float32 speed) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="speed" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="speed">To be added.</param>
        <summary>
            Set shader parameter animation speed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShaderParameterAnimationWrapMode">
      <MemberSignature Language="C#" Value="public void SetShaderParameterAnimationWrapMode (string name, Urho.WrapMode wrapMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetShaderParameterAnimationWrapMode(string name, valuetype Urho.WrapMode wrapMode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="wrapMode" Type="Urho.WrapMode" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="wrapMode">To be added.</param>
        <summary>
            Set shader parameter animation wrap mode.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTechnique">
      <MemberSignature Language="C#" Value="public void SetTechnique (uint index, Urho.Technique tech, uint qualityLevel, float lodDistance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTechnique(unsigned int32 index, class Urho.Technique tech, unsigned int32 qualityLevel, float32 lodDistance) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="tech" Type="Urho.Technique" />
        <Parameter Name="qualityLevel" Type="System.UInt32" />
        <Parameter Name="lodDistance" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="tech">To be added.</param>
        <param name="qualityLevel">To be added.</param>
        <param name="lodDistance">To be added.</param>
        <summary>
            Set technique.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTexture">
      <MemberSignature Language="C#" Value="public void SetTexture (Urho.TextureUnit unit, Urho.Texture texture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTexture(valuetype Urho.TextureUnit unit, class Urho.Texture texture) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="Urho.TextureUnit" />
        <Parameter Name="texture" Type="Urho.Texture" />
      </Parameters>
      <Docs>
        <param name="unit">To be added.</param>
        <param name="texture">To be added.</param>
        <summary>
            Set texture.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUVTransform">
      <MemberSignature Language="C#" Value="public void SetUVTransform (Urho.Vector2 offset, float rotation, float repeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetUVTransform(valuetype Urho.Vector2 offset, float32 rotation, float32 repeat) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="Urho.Vector2" />
        <Parameter Name="rotation" Type="System.Single" />
        <Parameter Name="repeat" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="offset">To be added.</param>
        <param name="rotation">To be added.</param>
        <param name="repeat">To be added.</param>
        <summary>
            Set texture coordinate transform.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUVTransform">
      <MemberSignature Language="C#" Value="public void SetUVTransform (Urho.Vector2 offset, float rotation, Urho.Vector2 repeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetUVTransform(valuetype Urho.Vector2 offset, float32 rotation, valuetype Urho.Vector2 repeat) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="Urho.Vector2" />
        <Parameter Name="rotation" Type="System.Single" />
        <Parameter Name="repeat" Type="Urho.Vector2" />
      </Parameters>
      <Docs>
        <param name="offset">To be added.</param>
        <param name="rotation">To be added.</param>
        <param name="repeat">To be added.</param>
        <summary>
            Set texture coordinate transform.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShaderParameterHash">
      <MemberSignature Language="C#" Value="public uint ShaderParameterHash { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 ShaderParameterHash" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return shader parameter hash value. Used as an optimization to avoid setting shader parameters unnecessarily.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowCullMode">
      <MemberSignature Language="C#" Value="public Urho.CullMode ShadowCullMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.CullMode ShadowCullMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.CullMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return culling mode for shadows.
            Or
            Set culling mode for shadows.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkyboxFromImage">
      <MemberSignature Language="C#" Value="public static Urho.Material SkyboxFromImage (string image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Urho.Material SkyboxFromImage(string image) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Material</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="image">Name of the resource that will be extracted from theÂ <see cref="T:Urho.Resources.ResourceCache" />Â that contains the image to load.</param>
        <summary>Creates a material Skybox where all six elements of the skybox are set to the specified image.</summary>
        <returns>A material which uses aÂ <see cref="T:Urho.TextureCube" />Â that has all the side of the cube set to the specified image.</returns>
        <remarks>The techinque on the resulting cube are set to DiffSkybox and the CullMode is set to None.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkyboxFromImages">
      <MemberSignature Language="C#" Value="public static Urho.Material SkyboxFromImages (string imagePositiveX, string imageNegativeX, string imagePositiveY, string imageNegativeY, string imagePositiveZ, string imageNegativeZ);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Urho.Material SkyboxFromImages(string imagePositiveX, string imageNegativeX, string imagePositiveY, string imageNegativeY, string imagePositiveZ, string imageNegativeZ) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Material</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imagePositiveX" Type="System.String" />
        <Parameter Name="imageNegativeX" Type="System.String" />
        <Parameter Name="imagePositiveY" Type="System.String" />
        <Parameter Name="imageNegativeY" Type="System.String" />
        <Parameter Name="imagePositiveZ" Type="System.String" />
        <Parameter Name="imageNegativeZ" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imagePositiveX">
          <para>Name of the resource that will be extracted from theÂ <see cref="T:Urho.Resources.ResourceCache" />Â that contains the image for the positive X side of the cube.</para>
          <para></para>
        </param>
        <param name="imageNegativeX">Name of the resource that will be extracted from theÂ <see cref="T:Urho.Resources.ResourceCache" />Â that contains the image for the negative X side of the cube.</param>
        <param name="imagePositiveY">Name of the resource that will be extracted from theÂ <see cref="T:Urho.Resources.ResourceCache" />Â that contains the image for the positive Y side of the cube.</param>
        <param name="imageNegativeY">Name of the resource that will be extracted from theÂ <see cref="T:Urho.Resources.ResourceCache" />Â that contains the image for the negative Y side of the cube.</param>
        <param name="imagePositiveZ">Name of the resource that will be extracted from theÂ <see cref="T:Urho.Resources.ResourceCache" />Â that contains the image for the positive Z side of the cube.</param>
        <param name="imageNegativeZ">Name of the resource that will be extracted from theÂ <see cref="T:Urho.Resources.ResourceCache" />Â that contains the image for the negative Z side of the cube.</param>
        <summary>Creates a material Skybox where all six elements of the skybox are specified.</summary>
        <returns>A material which uses aÂ <see cref="T:Urho.TextureCube" />Â that has all the side of the cube set to the specified image.</returns>
        <remarks>The techinque on the resulting cube are set to DiffSkybox and the CullMode is set to None.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortTechniques">
      <MemberSignature Language="C#" Value="public void SortTechniques ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SortTechniques() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Ensure that material techniques are listed in correct order.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Specular">
      <MemberSignature Language="C#" Value="public bool Specular { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Specular" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return whether should render specular.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public override Urho.StringHash Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.StringHash Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.StringHash</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's type system type.</summary>
        <value>StringHash representing the type for this C# type.</value>
        <remarks>This returns the Urho's type and is surfaced for low-level Urho code.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public override string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's low-level type name.</summary>
        <value>Stringified low-level type name.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeNameStatic">
      <MemberSignature Language="C#" Value="public static string TypeNameStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string TypeNameStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's low-level type name, accessible as a static method.</summary>
        <value>Stringified low-level type name.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeStatic">
      <MemberSignature Language="C#" Value="public static Urho.StringHash TypeStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Urho.StringHash TypeStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.StringHash</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's low-level type, accessible as a static method.</summary>
        <value>This returns the Urho's type and is surface for the low-level Urho code.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexShaderDefines">
      <MemberSignature Language="C#" Value="public string VertexShaderDefines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VertexShaderDefines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Set additional vertex shader defines. Separate multiple defines with spaces. Setting defines at the material level causes technique(s) to be cloned as necessary.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
