<Type Name="Node" FullName="Urho.Node">
  <TypeSignature Language="C#" Value="public class Node : Urho.Animatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Node extends Urho.Animatable" />
  <AssemblyInfo>
    <AssemblyName>Urho</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Urho.Animatable</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Scene node that may contain components and child nodes.</para>
    </summary>
    <remarks>
      <para>Nodes are the building block of your application.   Each Node has a 3D transform (position, rotation and scale), a name and an ID and can contain other nodes (child nodes).   Your application starts life with a special kind of node, the Scene node.</para>
      <para>
      </para>
      <para>To bring Nodes to life, you attach one or more components into it (<see cref="T:Urho.Component)" />.   Components provide functionality from giving a node a visual representation, to emitting sound, to emitting light and many more. These are created either with their constructors and then by attaching them using the <see cref="M:Urho.Node.AddComponent" /> method or by calling the <see cref="T:Urho.Node.CreateComponent" /> method which can do both operations in one call.</para>
      <para>
      </para>
      <para>Here are some common scenarios, creating a <see cref="T:Urho.Camera," /> a <see cref="T:Urho.Light" /> and a <see cref="T:Urho.StaticModel" />.</para>
      <para>
      </para>
      <para>
      </para>
      <example>
        <code lang="C#"><![CDATA[// Camera
var cameraNode = scene.CreateChild();
cameraNode.Position = (new Vector3(0.0f, 0.0f, -10.0f));
cameraNode.CreateComponent<Camera>();
Renderer.SetViewport(0, Viewport = new Viewport(Context, scene, cameraNode.GetComponent<Camera>(), null));

// Lights
var lightNode1 = scene.CreateChild();
lightNode1.Position = new Vector3(0, -5, -40);
lightNode1.AddComponent(new Light(Context) { LightType = LightType.Point, Range = 120, Brightness = 1.5f });

// Models
var cache = Application.ResourceCache;
var model = Node.CreateComponent<StaticModel>();
model.Model = cache.GetModel ("player.mdl");
var material = cache.GetMaterial("player.xml").Clone("");
model.SetMaterial(material);]]></code>
      </example>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Node ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <para>Constructs a new instance of Urho.Node which is tied to the <see cref="P:Urho.Application.CurrentContext" />.</para>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Node (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer to the raw unmanaged Urho object.</param>
        <summary>Constructs a new instance of Urho.Node, given a raw pointer to an unmanaged object</summary>
        <remarks>
          <para>This creates a new managed wrapper for the type using the raw pointer to an unmanaged object.</para>
          <para>Objects that are created in this fashion get registered with the UrhoSharp runtime.</para>
          <para>This is intended to be used by the UrhoSharp runtime, and is not intended to be used by users.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Node (Urho.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Urho.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="Urho.Context" />
      </Parameters>
      <Docs>
        <param name="context">The context that this object will be attached to.</param>
        <summary>
          <para>Constructs a new instance of Urho.Node linked to a specific <see cref="T:Urho.Context" />.</para>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Node (Urho.UrhoObjectFlag emptyFlag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype Urho.UrhoObjectFlag emptyFlag) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="emptyFlag" Type="Urho.UrhoObjectFlag" />
      </Parameters>
      <Docs>
        <param name="emptyFlag">Pass UrhoObjectFlag.Empty.</param>
        <summary>Empty constructor, chain to this constructor when you provide your own constructor that sets the handle field.</summary>
        <remarks>
          <para>This constructor should be invoked by your code if you provide your own constructor that sets the handle field.</para>
          <para>This essentially circumvents the default path that creates a new object and sets the handle and does not call RegisterObject on the target, you must do this on your own constructor.</para>
          <para>You would typically chain to this constructor from your own, and then set the handle to the unmanaged object from your code, and then register your object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (Urho.Node node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChild(class Urho.Node node) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Urho.Node" />
      </Parameters>
      <Docs>
        <param name="node">The node to append to the scene.</param>
        <summary>Adds the specified node as a child of this node.</summary>
        <remarks>
          <para>This appends the child to the end of the list.</para>
          <para />
          <para>The NodeAdded event is raised if the node is currently attached to a scene.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (Urho.Node node, uint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChild(class Urho.Node node, unsigned int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Urho.Node" />
        <Parameter Name="index" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="node">The node to append to the scene.</param>
        <param name="index">
          <para>If index is greater than current children size, append the new child at the end.</para>
          <para>
          </para>
        </param>
        <summary>
            Add a child scene node at a specific index. </summary>
        <remarks>
          <para>This appends the child to the end of the list.</para>
          <para />
          <para>The NodeAdded event is raised if the node is currently attached to a scene.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddComponent">
      <MemberSignature Language="C#" Value="public void AddComponent (Urho.Component component, uint id = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddComponent(class Urho.Component component, unsigned int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="Urho.Component" />
        <Parameter Name="id" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="component">Component to add.</param>
        <param name="id">ID to assign to the component, if zero, the <see cref="T:Urho.Scene" /> will assign the ID automatically.</param>
        <summary>Add a pre-created component.</summary>
        <remarks>This adds the component and defaults to CreateMode.Replicated for the addition mode.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddComponent">
      <MemberSignature Language="C#" Value="public void AddComponent (Urho.Component component, uint id, Urho.CreateMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddComponent(class Urho.Component component, unsigned int32 id, valuetype Urho.CreateMode mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="Urho.Component" />
        <Parameter Name="id" Type="System.UInt32" />
        <Parameter Name="mode" Type="Urho.CreateMode" />
      </Parameters>
      <Docs>
        <param name="component">Component to add.</param>
        <param name="id">ID to assign to the component, if zero, the <see cref="T:Urho.Scene" /> will assign the ID automatically.</param>
        <param name="mode">
          <para>Component and child node creation mode for networking.</para>
        </param>
        <summary>
            Add a pre-created component.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddListener">
      <MemberSignature Language="C#" Value="public void AddListener (Urho.Component component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddListener(class Urho.Component component) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="Urho.Component" />
      </Parameters>
      <Docs>
        <param name="component">To be added.</param>
        <summary>
            Add listener component that is notified of node being dirtied. Can either be in the same node or another.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddReplicationState">
      <MemberSignature Language="C#" Value="public virtual void AddReplicationState (Urho.Network.NodeReplicationState* state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddReplicationState(valuetype Urho.Network.NodeReplicationState* state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Urho.Network.NodeReplicationState*" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="public void AddTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddTag(string tag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">The string to associate</param>
        <summary>Attaches the specified string as a tag to this Node.</summary>
        <remarks>Use the <see cref="M:Urho.Node.RemoveTag" /> to remove this tag, or the <see cref="M:Urho.Node.HasTag" /> method to determine if the element has the specified tag attached.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnimationTrigger">
      <MemberSignature Language="C#" Value="public event Action&lt;Urho.AnimationTriggerEventArgs&gt; AnimationTrigger;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Action`1&lt;valuetype Urho.AnimationTriggerEventArgs&gt; AnimationTrigger" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Urho.AnimationTriggerEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>The event can register multiple callbacks and invoke all of them.   If this is not desired, and you only need a single shot callback, you can use the <see cref="M:Urho.SubscribeToAnimationTrigger" /> method.   That one will force that callback and will ignore any previously set events here.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAttributes">
      <MemberSignature Language="C#" Value="public override void ApplyAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyAttributes() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Apply attribute changes that can not be applied immediately recursively to child nodes and components.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BoneHierarchyCreated">
      <MemberSignature Language="C#" Value="public event Action&lt;Urho.BoneHierarchyCreatedEventArgs&gt; BoneHierarchyCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Action`1&lt;valuetype Urho.BoneHierarchyCreatedEventArgs&gt; BoneHierarchyCreated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Urho.BoneHierarchyCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>The event can register multiple callbacks and invoke all of them.   If this is not desired, and you only need a single shot callback, you can use the <see cref="M:Urho.SubscribeToBoneHierarchyCreated" /> method.   That one will force that callback and will ignore any previously set events here.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeParent">
      <MemberSignature Language="C#" Value="public void ChangeParent (Urho.Node newParent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ChangeParent(class Urho.Node newParent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newParent" Type="Urho.Node" />
      </Parameters>
      <Docs>
        <param name="newParent">The new parent for the node.</param>
        <summary>Changes the parent for the node</summary>
        <remarks>Moves the node to a new parent.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Urho.Node&gt; Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Urho.Node&gt; Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Urho.Node&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return immediate child scene nodes.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanupConnection">
      <MemberSignature Language="C#" Value="public virtual void CleanupConnection (Urho.Network.Connection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanupConnection(class Urho.Network.Connection connection) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Urho.Network.Connection" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <summary>
            Clean up all references to a network connection that is about to be removed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public Urho.Node Clone (Urho.CreateMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Urho.Node Clone(valuetype Urho.CreateMode mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Node</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="Urho.CreateMode" />
      </Parameters>
      <Docs>
        <param name="mode">To be added.</param>
        <summary>
            Clone scene node, components and child nodes. Return the clone.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneComponent">
      <MemberSignature Language="C#" Value="public Urho.Component CloneComponent (Urho.Component component, uint id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Urho.Component CloneComponent(class Urho.Component component, unsigned int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Component</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="Urho.Component" />
        <Parameter Name="id" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="component">To be added.</param>
        <param name="id">To be added.</param>
        <summary>
            Clone a component from another node using its create mode. Return the clone if successful or null on failure.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneComponent">
      <MemberSignature Language="C#" Value="public Urho.Component CloneComponent (Urho.Component component, Urho.CreateMode mode, uint id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Urho.Component CloneComponent(class Urho.Component component, valuetype Urho.CreateMode mode, unsigned int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Component</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="Urho.Component" />
        <Parameter Name="mode" Type="Urho.CreateMode" />
        <Parameter Name="id" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="component">To be added.</param>
        <param name="mode">To be added.</param>
        <param name="id">To be added.</param>
        <summary>
            Clone a component from another node and specify the create mode. Return the clone if successful or null on failure.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Components">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Urho.Component&gt; Components { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Urho.Component&gt; Components" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Urho.Component&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return all components.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChild">
      <MemberSignature Language="C#" Value="public Urho.Node CreateChild (uint id, Urho.CreateMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Urho.Node CreateChild(unsigned int32 id, valuetype Urho.CreateMode mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Node</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.UInt32" />
        <Parameter Name="mode" Type="Urho.CreateMode" />
      </Parameters>
      <Docs>
        <param name="id">identifier to assign to the child, if the node is attached to a scene, and the ID already exists, a new ID will be assigned.</param>
        <param name="mode">
          <para>Component and child node creation mode for networking.</para>
          <para>
          </para>
        </param>
        <summary>
            Create a child node with specific ID.
            </summary>
        <returns>The created scene node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChild">
      <MemberSignature Language="C#" Value="public Urho.Node CreateChild (string name = &quot;&quot;, uint id = 0, Urho.CreateMode mode = Urho.CreateMode.Replicated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Urho.Node CreateChild(string name, unsigned int32 id, valuetype Urho.CreateMode mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Node</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="id" Type="System.UInt32" />
        <Parameter Name="mode" Type="Urho.CreateMode" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="id">identifier to assign to the child, if the node is attached to a scene, and the ID already exists, a new ID will be assigned.</param>
        <param name="mode">Component and child node creation mode for networking.</param>
        <summary>Create a child node with a name, ID and creation mode.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChild">
      <MemberSignature Language="C#" Value="public Urho.Node CreateChild (string name, Urho.CreateMode mode, uint id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Urho.Node CreateChild(string name, valuetype Urho.CreateMode mode, unsigned int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Node</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="mode" Type="Urho.CreateMode" />
        <Parameter Name="id" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="mode">Component and child node creation mode for networking.</param>
        <param name="id">identifier to assign to the child, if the node is attached to a scene, and the ID already exists, a new ID will be assigned.</param>
        <summary>
            Create a child scene node (with specified ID if provided).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="public Urho.Component CreateComponent (Urho.StringHash type, Urho.CreateMode mode, uint id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Urho.Component CreateComponent(valuetype Urho.StringHash type, valuetype Urho.CreateMode mode, unsigned int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Component</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Urho.StringHash" />
        <Parameter Name="mode" Type="Urho.CreateMode" />
        <Parameter Name="id" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="type">UrhoType to create.</param>
        <param name="mode">Creation mode for the component, or Replicated if not specified.</param>
        <param name="id">ID to assign to the component, or null if not specified.</param>
        <summary>
            Create a component to this node (with specified ID if provided).
            </summary>
        <returns>Returns the created component.  The result will already be attached to the node.</returns>
        <remarks>
          <para>
          </para>
          <example>
            <code lang="C#"><![CDATA[var planeObject = planeNode.CreateComponent (StaticModel.TypeStatic, CreateMode.Replicated, 0) as StaticModel;
planeObject.Model = cache.GetModel ("Models/Plane.mdl");
planeObject.SetMaterial(cache.GetMaterial("Materials/StoneTiled.xml"));
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateComponent&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T CreateComponent&lt;T&gt; (Urho.CreateMode mode = Urho.CreateMode.Replicated, uint id = 0) where T : Urho.Component;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T CreateComponent&lt;(class Urho.Component) T&gt;(valuetype Urho.CreateMode mode, unsigned int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Urho.Component</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="mode" Type="Urho.CreateMode" />
        <Parameter Name="id" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="mode">Creation mode for the component, or Replicated if not specified.</param>
        <param name="id">ID to assign to the component, or null if not specified.</param>
        <summary>Creates a component with the Node’s context and attaches it to the node.</summary>
        <returns>Returns the created component.  The result will already be attached to the node.</returns>
        <remarks>
          <para>
          </para>
          <para>
          </para>
          <example>
            <code lang="C#"><![CDATA[var planeObject = planeNode.CreateComponent<StaticModel> ();
planeObject.Model = cache.GetModel ("Models/Plane.mdl");
planeObject.SetMaterial(cache.GetMaterial("Materials/StoneTiled.xml"));
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateComponent&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T CreateComponent&lt;T&gt; (Urho.StringHash type, Urho.CreateMode mode = Urho.CreateMode.Replicated, uint id = 0) where T : Urho.Component;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T CreateComponent&lt;(class Urho.Component) T&gt;(valuetype Urho.StringHash type, valuetype Urho.CreateMode mode, unsigned int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Urho.Component</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="type" Type="Urho.StringHash" />
        <Parameter Name="mode" Type="Urho.CreateMode" />
        <Parameter Name="id" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="type">UrhoType to create, </param>
        <param name="mode">
          <para>Creation mode for the component, or Replicated if not specified.</para>
          <para>
          </para>
        </param>
        <param name="id">ID to assign to the component, or null if not specified.</param>
        <summary>Creates a component with the Node’s context and attaches it to the node using an UrhoType description.</summary>
        <returns>Returns the created component.  The result will already be attached to the node.</returns>
        <remarks>
          <para>
          </para>
          <example>
            <code lang="C#"><![CDATA[var planeObject = planeNode.CreateComponent<StaticModel> (StaticModel.TypeStatic);
planeObject.Model = cache.GetModel ("Models/Plane.mdl");
planeObject.SetMaterial(cache.GetMaterial("Materials/StoneTiled.xml"));
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public Urho.Vector3 Direction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector3 Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return forward direction in parent space. Positive Z axis equals identity rotation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dirty">
      <MemberSignature Language="C#" Value="public bool Dirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determines whether transform has changed and world transform needs recalculation.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Controls whether the node is enabled. Disables nodes effectively disable all their components.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnabledSelf">
      <MemberSignature Language="C#" Value="public bool EnabledSelf { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnabledSelf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChild">
      <MemberSignature Language="C#" Value="public Urho.Node GetChild (uint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Urho.Node GetChild(unsigned int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Node</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>
            Return child scene node by index.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChild">
      <MemberSignature Language="C#" Value="public Urho.Node GetChild (string name, bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Urho.Node GetChild(string name, bool recursive) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Node</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="recursive">To be added.</param>
        <summary>
            Return child scene node by name.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChild">
      <MemberSignature Language="C#" Value="public Urho.Node GetChild (Urho.StringHash nameHash, bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Urho.Node GetChild(valuetype Urho.StringHash nameHash, bool recursive) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Node</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nameHash" Type="Urho.StringHash" />
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nameHash">To be added.</param>
        <param name="recursive">To be added.</param>
        <summary>
            Return child scene node by name hash.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildrenWithComponent&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Urho.Node[] GetChildrenWithComponent&lt;T&gt; (bool recursive = false) where T : Urho.Component;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Urho.Node[] GetChildrenWithComponent&lt;(class Urho.Component) T&gt;(bool recursive) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Node[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Urho.Component</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="recursive">If true, the search includes nested children, otherwise the search is done only on the immediate children of this node.</param>
        <summary>Returns children nodes that have a specific component attached to it.</summary>
        <returns>Array containing the nodes that have the specified component, or an empty array if there are none.</returns>
        <remarks>Returns only exact components of T type. Ignores subclasses of T, for example, GetChildrenWithComponent&lt;StaticModel&gt;() won’t return nodes with AnimatedModel components (AnimatedModels is a subclass of StaticModel).</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComponent">
      <MemberSignature Language="C#" Value="public Urho.Component GetComponent (Urho.StringHash type, bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Urho.Component GetComponent(valuetype Urho.StringHash type, bool recursive) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Component</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Urho.StringHash" />
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">The type of the component to lookup.</param>
        <param name="recursive">If <see langword="true" />, this performs a recursive search on the child nodes of this node.</param>
        <summary>
            Return component by type. If there are several, returns the first.
            </summary>
        <returns>The component of the specified <paramref name="type" />, if found, otherwise <see langword="null" />.</returns>
        <remarks>This method searches the current node for a component with an urho component type of <paramref name="type" />.  This will either search only the components attached to this node if recursive is set to <see langword="false" />, or it will search for the component recursive on all the children nodes attached to this node.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComponent&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetComponent&lt;T&gt; (bool recursive = false) where T : Urho.Component;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetComponent&lt;(class Urho.Component) T&gt;(bool recursive) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Urho.Component</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="recursive">If <see langword="true" />, this performs a recursive search on the child nodes of this node.</param>
        <summary>Return the component of the specified T parameters. If there are several, returns the first.</summary>
        <returns>The component of the specified <paramref name="type" />, if found, otherwise <see langword="null" />.</returns>
        <remarks>This method searches the current node for a component with an urho component type <paramref name="T" />.  This will either search only the components attached to this node if recursive is set to <see langword="false" />, or it will search for the component recursive on all the children nodes attached to this node.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumChildren">
      <MemberSignature Language="C#" Value="public uint GetNumChildren (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int32 GetNumChildren(bool recursive) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive">To be added.</param>
        <summary>
            Return number of child scene nodes.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateComponent">
      <MemberSignature Language="C#" Value="public Urho.Component GetOrCreateComponent (Urho.StringHash type, Urho.CreateMode mode, uint id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Urho.Component GetOrCreateComponent(valuetype Urho.StringHash type, valuetype Urho.CreateMode mode, unsigned int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Component</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Urho.StringHash" />
        <Parameter Name="mode" Type="Urho.CreateMode" />
        <Parameter Name="id" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="type">Type name of the component to create.</param>
        <param name="mode">Component and child node creation mode for networking.</param>
        <param name="id">The identifier to assign to the component if it must be created.</param>
        <summary>
            Create a component to this node if it does not exist already.
            </summary>
        <returns>Returns the component of the specified <paramref name="type" /> that was either located, or that was created.</returns>
        <remarks>This method calls the <see cref="M:Urho.Node.GetComponent" /> method to perform the search, if the component is not found, then it calls <see cref="M:Urho.Node.CreateComponent" /> method with the specified <paramref name="type" />, <paramref name="mode" /> and <paramref name="id" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateComponent&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetOrCreateComponent&lt;T&gt; (bool recursive = false) where T : Urho.Component;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetOrCreateComponent&lt;(class Urho.Component) T&gt;(bool recursive) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Urho.Component</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="recursive">If <see langword="true" />, this performs a recursive search on the child nodes of this node.</param>
        <summary>Create a component to this node if it does not exist already.</summary>
        <returns>Returns the component of the specified <typeparamref name="T" /> that was either located, or that was created.</returns>
        <remarks>This method calls the <see cref="M:Urho.Node.GetComponent" /> method to perform the search, if the component is not found, then it calls <see cref="M:Urho.Node.CreateComponent" /> method </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParentComponent">
      <MemberSignature Language="C#" Value="public Urho.Component GetParentComponent (Urho.StringHash type, bool fullTraversal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Urho.Component GetParentComponent(valuetype Urho.StringHash type, bool fullTraversal) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Component</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Urho.StringHash" />
        <Parameter Name="fullTraversal" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="fullTraversal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasComponent">
      <MemberSignature Language="C#" Value="public bool HasComponent (Urho.StringHash type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasComponent(valuetype Urho.StringHash type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Urho.StringHash" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
            Return whether has a specific component.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasTag">
      <MemberSignature Language="C#" Value="public bool HasTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasTag(string tag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">The tag to check</param>
        <summary>Determines if the node has the specified tag attached to it.</summary>
        <returns>
          <see langword="true" /> if it does, <see langword="false" /> otherwise.</returns>
        <remarks>Use the <see cref="M:Urho.Node.AddTag" /> to add a tag to the node and <see cref="M:Urho.Node.RemoveTag" /> to remove it.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public uint ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return ID.
            Or
            Set ID. Called by Scene.
            </summary>
        <value>ID assigned to this node.</value>
        <remarks>You should ideally have unique IDs.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override bool Load (Urho.IO.File source, bool setInstanceDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Load(class Urho.IO.File source, bool setInstanceDefault) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Urho.IO.File" />
        <Parameter Name="setInstanceDefault" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="setInstanceDefault">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public override bool LoadXml (Urho.Resources.XmlElement source, bool setInstanceDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool LoadXml(class Urho.Resources.XmlElement source, bool setInstanceDefault) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Urho.Resources.XmlElement" />
        <Parameter Name="setInstanceDefault" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="setInstanceDefault">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalToWorld">
      <MemberSignature Language="C#" Value="public Urho.Vector3 LocalToWorld (Urho.Vector3 position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Urho.Vector3 LocalToWorld(valuetype Urho.Vector3 position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <summary>
            Convert a local space position to world space.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalToWorld">
      <MemberSignature Language="C#" Value="public Urho.Vector3 LocalToWorld (Urho.Vector4 vector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Urho.Vector3 LocalToWorld(valuetype Urho.Vector4 vector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="Urho.Vector4" />
      </Parameters>
      <Docs>
        <param name="vector">To be added.</param>
        <summary>
            Convert a local space position or rotation to world space.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalToWorld2D">
      <MemberSignature Language="C#" Value="public Urho.Vector2 LocalToWorld2D (Urho.Vector2 vector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Urho.Vector2 LocalToWorld2D(valuetype Urho.Vector2 vector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="Urho.Vector2" />
      </Parameters>
      <Docs>
        <param name="vector">To be added.</param>
        <summary>
            Convert a local space position or rotation to world space (for Urho2D).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookAt">
      <MemberSignature Language="C#" Value="public bool LookAt (Urho.Vector3 target, Urho.Vector3 up, Urho.TransformSpace space);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool LookAt(valuetype Urho.Vector3 target, valuetype Urho.Vector3 up, valuetype Urho.TransformSpace space) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Urho.Vector3" />
        <Parameter Name="up" Type="Urho.Vector3" />
        <Parameter Name="space" Type="Urho.TransformSpace" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="up">To be added.</param>
        <param name="space">To be added.</param>
        <summary>
            Look at a target position in the chosen transform space. Note that the up vector is always specified in world space. Return true if successful, or false if resulted in an illegal rotation, in which case the current rotation remains.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkDirty">
      <MemberSignature Language="C#" Value="public void MarkDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MarkDirty() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Mark node and child nodes to need world transform recalculation. Notify listener components.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkNetworkUpdate">
      <MemberSignature Language="C#" Value="public override void MarkNetworkUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void MarkNetworkUpdate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Mark for attribute check on the next network update.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkReplicationDirty">
      <MemberSignature Language="C#" Value="public void MarkReplicationDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MarkReplicationDirty() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Mark node dirty in scene replication states.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return name.
            Or
            Set name of the scene node. Names are not required to be unique.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameHash">
      <MemberSignature Language="C#" Value="public Urho.StringHash NameHash { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.StringHash NameHash" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.StringHash</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return name hash.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetPositionAttr">
      <MemberSignature Language="C#" Value="public Urho.Vector3 NetPositionAttr { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector3 NetPositionAttr" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return network position attribute.
            Or
            Set network position attribute.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeCollision">
      <MemberSignature Language="C#" Value="public event Action&lt;Urho.NodeCollisionEventArgs&gt; NodeCollision;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Action`1&lt;valuetype Urho.NodeCollisionEventArgs&gt; NodeCollision" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Urho.NodeCollisionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>The event can register multiple callbacks and invoke all of them.   If this is not desired, and you only need a single shot callback, you can use the <see cref="M:Urho.SubscribeToNodeCollision" /> method.   That one will force that callback and will ignore any previously set events here.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeCollisionEnd">
      <MemberSignature Language="C#" Value="public event Action&lt;Urho.NodeCollisionEndEventArgs&gt; NodeCollisionEnd;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Action`1&lt;valuetype Urho.NodeCollisionEndEventArgs&gt; NodeCollisionEnd" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Urho.NodeCollisionEndEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>The event can register multiple callbacks and invoke all of them.   If this is not desired, and you only need a single shot callback, you can use the <see cref="M:Urho.SubscribeToNodeCollisionEnd" /> method.   That one will force that callback and will ignore any previously set events here.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeCollisionStart">
      <MemberSignature Language="C#" Value="public event Action&lt;Urho.NodeCollisionStartEventArgs&gt; NodeCollisionStart;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Action`1&lt;valuetype Urho.NodeCollisionStartEventArgs&gt; NodeCollisionStart" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Urho.NodeCollisionStartEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>The event can register multiple callbacks and invoke all of them.   If this is not desired, and you only need a single shot callback, you can use the <see cref="M:Urho.SubscribeToNodeCollisionStart" /> method.   That one will force that callback and will ignore any previously set events here.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumComponents">
      <MemberSignature Language="C#" Value="public uint NumComponents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 NumComponents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return number of components.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumNetworkComponents">
      <MemberSignature Language="C#" Value="public uint NumNetworkComponents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 NumNetworkComponents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return number of non-local components.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumPersistentChildren">
      <MemberSignature Language="C#" Value="public uint NumPersistentChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 NumPersistentChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Calculate number of non-temporary child nodes.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumPersistentComponents">
      <MemberSignature Language="C#" Value="public uint NumPersistentComponents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 NumPersistentComponents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Calculate number of non-temporary components.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public Urho.Network.Connection Owner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Urho.Network.Connection Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Network.Connection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return owner connection in networking.
            Or
            Set owner connection for networking.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Urho.Node Parent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Urho.Node Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Node</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return parent scene node.
            Or
            Set parent scene node. Retains the world transform.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PauseAllActions">
      <MemberSignature Language="C#" Value="public void PauseAllActions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PauseAllActions() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pauses all actions that have been started with <see cref="T:Urho.Node.RunActionsAsync" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pitch">
      <MemberSignature Language="C#" Value="public void Pitch (float angle, Urho.TransformSpace space);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pitch(float32 angle, valuetype Urho.TransformSpace space) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="space" Type="Urho.TransformSpace" />
      </Parameters>
      <Docs>
        <param name="angle">To be added.</param>
        <param name="space">To be added.</param>
        <summary>
            Rotate around the X axis.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public Urho.Vector3 Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector3 Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return position in parent space.
            Or
            Set position in parent space. If the scene node is on the root level (is child of the scene itself), this is same as world space.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position2D">
      <MemberSignature Language="C#" Value="public Urho.Vector2 Position2D { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector2 Position2D" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return position in parent space (for Urho2D).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareNetworkUpdate">
      <MemberSignature Language="C#" Value="public virtual void PrepareNetworkUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrepareNetworkUpdate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Prepare network update by comparing attributes and marking replication states dirty as necessary.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public static void RegisterObject (Urho.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterObject(class Urho.Context context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Urho.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
            Register object factory.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Remove from the parent node. If no other shared pointer references exist, causes immediate deletion.
            </summary>
        <remarks>If you want to move the node to another node, you can use the <see cref="M:Urho.Node.ChangeParent" /> method.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAction">
      <MemberSignature Language="C#" Value="public void RemoveAction (Urho.Actions.ActionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAction(class Urho.Actions.ActionState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Urho.Actions.ActionState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAction">
      <MemberSignature Language="C#" Value="public void RemoveAction (Urho.Actions.BaseAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAction(class Urho.Actions.BaseAction action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Urho.Actions.BaseAction" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllActions">
      <MemberSignature Language="C#" Value="public void RemoveAllActions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllActions() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all actions that have been started with <see cref="T:Urho.Node.RunActionsAsync" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllChildren">
      <MemberSignature Language="C#" Value="public void RemoveAllChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllChildren() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Remove all child scene nodes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllComponents">
      <MemberSignature Language="C#" Value="public void RemoveAllComponents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllComponents() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Remove all components from this node.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllTags">
      <MemberSignature Language="C#" Value="public void RemoveAllTags ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllTags() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all tags that have been associated with the node.</summary>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveChild">
      <MemberSignature Language="C#" Value="public void RemoveChild (Urho.Node node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveChild(class Urho.Node node) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Urho.Node" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>
            Remove a child scene node.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveChildren">
      <MemberSignature Language="C#" Value="public void RemoveChildren (bool removeReplicated, bool removeLocal, bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveChildren(bool removeReplicated, bool removeLocal, bool recursive) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="removeReplicated" Type="System.Boolean" />
        <Parameter Name="removeLocal" Type="System.Boolean" />
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="removeReplicated">To be added.</param>
        <param name="removeLocal">To be added.</param>
        <param name="recursive">To be added.</param>
        <summary>
            Remove child scene nodes that match criteria.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveComponent">
      <MemberSignature Language="C#" Value="public void RemoveComponent (Urho.Component component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveComponent(class Urho.Component component) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="Urho.Component" />
      </Parameters>
      <Docs>
        <param name="component">To be added.</param>
        <summary>
            Remove a component from this node.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveComponent">
      <MemberSignature Language="C#" Value="public void RemoveComponent (Urho.StringHash type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveComponent(valuetype Urho.StringHash type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Urho.StringHash" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
            Remove the first component of specific type from this node.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveComponent&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void RemoveComponent&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveComponent&lt;T&gt;() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <summary>Removes the component of the specified type.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveComponents">
      <MemberSignature Language="C#" Value="public void RemoveComponents (Urho.StringHash type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveComponents(valuetype Urho.StringHash type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Urho.StringHash" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
            Remove all components of specific type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveComponents">
      <MemberSignature Language="C#" Value="public void RemoveComponents (bool removeReplicated, bool removeLocal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveComponents(bool removeReplicated, bool removeLocal) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="removeReplicated" Type="System.Boolean" />
        <Parameter Name="removeLocal" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="removeReplicated">To be added.</param>
        <param name="removeLocal">To be added.</param>
        <summary>
            Remove components that match criteria.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveListener">
      <MemberSignature Language="C#" Value="public void RemoveListener (Urho.Component component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveListener(class Urho.Component component) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="Urho.Component" />
      </Parameters>
      <Docs>
        <param name="component">To be added.</param>
        <summary>
            Remove listener component.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTag">
      <MemberSignature Language="C#" Value="public bool RemoveTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveTag(string tag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">Tag to remove from the node.</param>
        <summary>Removes a string tag from the Node.</summary>
        <returns>
          <see langword="true" /> if the tag exited on the node, <see langword="false" /> otherwise.</returns>
        <remarks>Use the <see cref="M:Urho.Node.AddTag" /> to add a tag to the node and <see cref="M:Urho.Node.HasTag" /> to probe if it is attached.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReorderComponent">
      <MemberSignature Language="C#" Value="public void ReorderComponent (Urho.Component component, uint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReorderComponent(class Urho.Component component, unsigned int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="Urho.Component" />
        <Parameter Name="index" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="component">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetDeepEnabled">
      <MemberSignature Language="C#" Value="public void ResetDeepEnabled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetDeepEnabled() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Reset enabled state to the node's remembered state prior to calling SetDeepEnabled.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetScene">
      <MemberSignature Language="C#" Value="public void ResetScene ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetScene() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Reset scene, ID and owner. Called by Scene.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeAllActions">
      <MemberSignature Language="C#" Value="public void ResumeAllActions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResumeAllActions() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resumes all actions that have been started with <see cref="T:Urho.Node.RunActionsAsync" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public Urho.Vector3 Right { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector3 Right" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return right direction in parent space. Positive X axis equals identity rotation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Roll">
      <MemberSignature Language="C#" Value="public void Roll (float angle, Urho.TransformSpace space);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Roll(float32 angle, valuetype Urho.TransformSpace space) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="space" Type="Urho.TransformSpace" />
      </Parameters>
      <Docs>
        <param name="angle">To be added.</param>
        <param name="space">To be added.</param>
        <summary>
            Rotate around the Z axis.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (Urho.Quaternion delta, Urho.TransformSpace space);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rotate(valuetype Urho.Quaternion delta, valuetype Urho.TransformSpace space) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delta" Type="Urho.Quaternion" />
        <Parameter Name="space" Type="Urho.TransformSpace" />
      </Parameters>
      <Docs>
        <param name="delta">To be added.</param>
        <param name="space">To be added.</param>
        <summary>
            Rotate the scene node in the chosen transform space.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotate2D">
      <MemberSignature Language="C#" Value="public void Rotate2D (float delta, Urho.TransformSpace space);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rotate2D(float32 delta, valuetype Urho.TransformSpace space) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delta" Type="System.Single" />
        <Parameter Name="space" Type="Urho.TransformSpace" />
      </Parameters>
      <Docs>
        <param name="delta">To be added.</param>
        <param name="space">To be added.</param>
        <summary>
            Rotate the scene node in the chosen transform space (for Urho2D).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateAround">
      <MemberSignature Language="C#" Value="public void RotateAround (Urho.Vector3 point, Urho.Quaternion delta, Urho.TransformSpace space);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAround(valuetype Urho.Vector3 point, valuetype Urho.Quaternion delta, valuetype Urho.TransformSpace space) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="Urho.Vector3" />
        <Parameter Name="delta" Type="Urho.Quaternion" />
        <Parameter Name="space" Type="Urho.TransformSpace" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <param name="delta">To be added.</param>
        <param name="space">To be added.</param>
        <summary>
            Rotate around a point in the chosen transform space.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateAround2D">
      <MemberSignature Language="C#" Value="public void RotateAround2D (Urho.Vector2 point, float delta, Urho.TransformSpace space);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAround2D(valuetype Urho.Vector2 point, float32 delta, valuetype Urho.TransformSpace space) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="Urho.Vector2" />
        <Parameter Name="delta" Type="System.Single" />
        <Parameter Name="space" Type="Urho.TransformSpace" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <param name="delta">To be added.</param>
        <param name="space">To be added.</param>
        <summary>
            Rotate around a point in the chosen transform space (for Urho2D).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public Urho.Quaternion Rotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Quaternion Rotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Quaternion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return rotation in parent space.
            Or
            Set rotation in parent space.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation2D">
      <MemberSignature Language="C#" Value="public float Rotation2D { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Rotation2D" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return rotation in parent space (for Urho2D).
            Or
            Set rotation in parent space (for Urho2D).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunActions">
      <MemberSignature Language="C#" Value="public void RunActions (Urho.Actions.FiniteTimeAction[] actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RunActions(class Urho.Actions.FiniteTimeAction[] actions) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actions" Type="Urho.Actions.FiniteTimeAction[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="actions">Actions to execute.</param>
        <summary>Runs the specified actions.</summary>
        <remarks>The actions are groupped in a Sequence action.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunActionsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Urho.Actions.ActionState&gt; RunActionsAsync (Urho.Actions.FiniteTimeAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Urho.Actions.ActionState&gt; RunActionsAsync(class Urho.Actions.FiniteTimeAction action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Urho.Actions.ActionState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Urho.Actions.FiniteTimeAction" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunActionsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Urho.Actions.ActionState&gt; RunActionsAsync (Urho.Actions.FiniteTimeAction[] actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Urho.Actions.ActionState&gt; RunActionsAsync(class Urho.Actions.FiniteTimeAction[] actions) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Urho.Actions.ActionState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actions" Type="Urho.Actions.FiniteTimeAction[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="actions">An array of FiniteTimeAction objects.</param>
        <summary>
            Runs a sequence of Actions so that it can be awaited.
            </summary>
        <returns>Task representing the actions.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override bool Save (Urho.IO.File dest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Save(class Urho.IO.File dest) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="Urho.IO.File" />
      </Parameters>
      <Docs>
        <param name="dest">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveDefaultAttributes">
      <MemberSignature Language="C#" Value="public override bool SaveDefaultAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool SaveDefaultAttributes() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Return whether should save default-valued attributes into XML. Always save node transforms for readability, even if identity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveJson">
      <MemberSignature Language="C#" Value="public virtual bool SaveJson (Urho.IO.File dest, string indentation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SaveJson(class Urho.IO.File dest, string indentation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="Urho.IO.File" />
        <Parameter Name="indentation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dest">Where the json is stored at.</param>
        <param name="indentation">Indentation to use for the data.</param>
        <summary>Saves the entire node as a prefab as Json data.</summary>
        <returns>Returns <see langword="true" /> on success.</returns>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveXml">
      <MemberSignature Language="C#" Value="public override bool SaveXml (Urho.Resources.XmlElement dest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool SaveXml(class Urho.Resources.XmlElement dest) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="Urho.Resources.XmlElement" />
      </Parameters>
      <Docs>
        <param name="dest">The destiation to store the node on.</param>
        <summary>Saves the entire node as a prefab into the provided XmlElement.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveXml">
      <MemberSignature Language="C#" Value="public virtual bool SaveXml (Urho.IO.File dest, string indentation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SaveXml(class Urho.IO.File dest, string indentation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="Urho.IO.File" />
        <Parameter Name="indentation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dest">To be added.</param>
        <param name="indentation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public Urho.Vector3 Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector3 Scale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return scale in parent space.
            Or
            Set scale in parent space.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale2D">
      <MemberSignature Language="C#" Value="public Urho.Vector2 Scale2D { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector2 Scale2D" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return scale in parent space (for Urho2D).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleNode">
      <MemberSignature Language="C#" Value="public void ScaleNode (float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleNode(float32 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="scale">To be added.</param>
        <summary>
            Modify scale in parent space uniformly.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleNode">
      <MemberSignature Language="C#" Value="public void ScaleNode (Urho.Vector3 scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleNode(valuetype Urho.Vector3 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="scale">To be added.</param>
        <summary>
            Modify scale in parent space.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleNode2D">
      <MemberSignature Language="C#" Value="public void ScaleNode2D (Urho.Vector2 scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleNode2D(valuetype Urho.Vector2 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="Urho.Vector2" />
      </Parameters>
      <Docs>
        <param name="scale">To be added.</param>
        <summary>
            Modify scale in parent space (for Urho2D).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scene">
      <MemberSignature Language="C#" Value="public Urho.Scene Scene { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Urho.Scene Scene" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Scene</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return scene.
            Or
            Set scene. Called by Scene.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDeepEnabled">
      <MemberSignature Language="C#" Value="public void SetDeepEnabled (bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDeepEnabled(bool enable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enable">To be added.</param>
        <summary>
            Set enabled state on self and child nodes. Nodes' own enabled state is remembered (IsEnabledSelf) and can be restored.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDirection">
      <MemberSignature Language="C#" Value="public void SetDirection (Urho.Vector3 direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDirection(valuetype Urho.Vector3 direction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="direction">To be added.</param>
        <summary>
            Set forward direction in parent space. Positive Z axis equals identity rotation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEnabledRecursive">
      <MemberSignature Language="C#" Value="public void SetEnabledRecursive (bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEnabledRecursive(bool enable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enable">To be added.</param>
        <summary>
            Set enabled state on self and child nodes. Unlike SetDeepEnabled this does not remember the nodes' own enabled state, but overwrites it.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPosition2D">
      <MemberSignature Language="C#" Value="public void SetPosition2D (Urho.Vector2 position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPosition2D(valuetype Urho.Vector2 position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Urho.Vector2" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <summary>
            Set position in parent space (for Urho2D).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPosition2D">
      <MemberSignature Language="C#" Value="public void SetPosition2D (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPosition2D(float32 x, float32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>
            Set position in parent space (for Urho2D).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPositionSilent">
      <MemberSignature Language="C#" Value="public void SetPositionSilent (Urho.Vector3 position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPositionSilent(valuetype Urho.Vector3 position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <summary>Updates the position but does not flag the node as dirty, nor as requiring a network update.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRotationSilent">
      <MemberSignature Language="C#" Value="public void SetRotationSilent (Urho.Quaternion rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRotationSilent(valuetype Urho.Quaternion rotation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rotation" Type="Urho.Quaternion" />
      </Parameters>
      <Docs>
        <param name="rotation">To be added.</param>
        <summary>Sets the rotation but does not flag the node as dirty, nor as requiring a network update.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetScale">
      <MemberSignature Language="C#" Value="public void SetScale (float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetScale(float32 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="scale">To be added.</param>
        <summary>
            Set uniform scale in parent space.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetScale2D">
      <MemberSignature Language="C#" Value="public void SetScale2D (Urho.Vector2 scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetScale2D(valuetype Urho.Vector2 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="Urho.Vector2" />
      </Parameters>
      <Docs>
        <param name="scale">To be added.</param>
        <summary>
            Set scale in parent space (for Urho2D).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetScale2D">
      <MemberSignature Language="C#" Value="public void SetScale2D (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetScale2D(float32 x, float32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>
            Set scale in parent space (for Urho2D).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetScaleSilent">
      <MemberSignature Language="C#" Value="public void SetScaleSilent (Urho.Vector3 scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetScaleSilent(valuetype Urho.Vector3 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="scale">To be added.</param>
        <summary>Sets the scale but does not flag the node as dirty, nor as requiring a network update.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTransform">
      <MemberSignature Language="C#" Value="public void SetTransform (Urho.Matrix3x4 matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTransform(valuetype Urho.Matrix3x4 matrix) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="Urho.Matrix3x4" />
      </Parameters>
      <Docs>
        <param name="matrix">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTransform">
      <MemberSignature Language="C#" Value="public void SetTransform (Urho.Vector3 position, Urho.Quaternion rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTransform(valuetype Urho.Vector3 position, valuetype Urho.Quaternion rotation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Urho.Vector3" />
        <Parameter Name="rotation" Type="Urho.Quaternion" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <param name="rotation">To be added.</param>
        <summary>
            Set both position and rotation in parent space as an atomic operation. This is faster than setting position and rotation separately.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTransform">
      <MemberSignature Language="C#" Value="public void SetTransform (Urho.Vector3 position, Urho.Quaternion rotation, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTransform(valuetype Urho.Vector3 position, valuetype Urho.Quaternion rotation, float32 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Urho.Vector3" />
        <Parameter Name="rotation" Type="Urho.Quaternion" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <param name="rotation">To be added.</param>
        <param name="scale">To be added.</param>
        <summary>
            Set both position, rotation and uniform scale in parent space as an atomic operation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTransform">
      <MemberSignature Language="C#" Value="public void SetTransform (Urho.Vector3 position, Urho.Quaternion rotation, Urho.Vector3 scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTransform(valuetype Urho.Vector3 position, valuetype Urho.Quaternion rotation, valuetype Urho.Vector3 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Urho.Vector3" />
        <Parameter Name="rotation" Type="Urho.Quaternion" />
        <Parameter Name="scale" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <param name="rotation">To be added.</param>
        <param name="scale">To be added.</param>
        <summary>
            Set both position, rotation and scale in parent space as an atomic operation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTransform2D">
      <MemberSignature Language="C#" Value="public void SetTransform2D (Urho.Vector2 position, float rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTransform2D(valuetype Urho.Vector2 position, float32 rotation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Urho.Vector2" />
        <Parameter Name="rotation" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <param name="rotation">To be added.</param>
        <summary>
            Set both position and rotation in parent space as an atomic operation (for Urho2D).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTransform2D">
      <MemberSignature Language="C#" Value="public void SetTransform2D (Urho.Vector2 position, float rotation, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTransform2D(valuetype Urho.Vector2 position, float32 rotation, float32 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Urho.Vector2" />
        <Parameter Name="rotation" Type="System.Single" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <param name="rotation">To be added.</param>
        <param name="scale">To be added.</param>
        <summary>
            Set both position, rotation and uniform scale in parent space as an atomic operation (for Urho2D).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTransform2D">
      <MemberSignature Language="C#" Value="public void SetTransform2D (Urho.Vector2 position, float rotation, Urho.Vector2 scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTransform2D(valuetype Urho.Vector2 position, float32 rotation, valuetype Urho.Vector2 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Urho.Vector2" />
        <Parameter Name="rotation" Type="System.Single" />
        <Parameter Name="scale" Type="Urho.Vector2" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <param name="rotation">To be added.</param>
        <param name="scale">To be added.</param>
        <summary>
            Set both position, rotation and scale in parent space as an atomic operation (for Urho2D).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTransformSilent">
      <MemberSignature Language="C#" Value="public void SetTransformSilent (Urho.Vector3 position, Urho.Quaternion rotation, Urho.Vector3 scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTransformSilent(valuetype Urho.Vector3 position, valuetype Urho.Quaternion rotation, valuetype Urho.Vector3 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Urho.Vector3" />
        <Parameter Name="rotation" Type="Urho.Quaternion" />
        <Parameter Name="scale" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <param name="rotation">To be added.</param>
        <param name="scale">To be added.</param>
        <summary>Sets the node transform but does not flag the node as dirty, nor as requiring a network update.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVar">
      <MemberSignature Language="C#" Value="public void SetVar (Urho.StringHash key, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVar(valuetype Urho.StringHash key, int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Urho.StringHash" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Set a user variable.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVar">
      <MemberSignature Language="C#" Value="public void SetVar (Urho.StringHash key, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVar(valuetype Urho.StringHash key, float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Urho.StringHash" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Set a user variable.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVar">
      <MemberSignature Language="C#" Value="public void SetVar (Urho.StringHash key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVar(valuetype Urho.StringHash key, string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Urho.StringHash" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Set a user variable.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVar">
      <MemberSignature Language="C#" Value="public void SetVar (Urho.StringHash key, Urho.Color value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVar(valuetype Urho.StringHash key, valuetype Urho.Color value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Urho.StringHash" />
        <Parameter Name="value" Type="Urho.Color" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Set a user variable.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVar">
      <MemberSignature Language="C#" Value="public void SetVar (Urho.StringHash key, Urho.IntRect value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVar(valuetype Urho.StringHash key, valuetype Urho.IntRect value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Urho.StringHash" />
        <Parameter Name="value" Type="Urho.IntRect" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Set a user variable.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVar">
      <MemberSignature Language="C#" Value="public void SetVar (Urho.StringHash key, Urho.IntVector2 value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVar(valuetype Urho.StringHash key, valuetype Urho.IntVector2 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Urho.StringHash" />
        <Parameter Name="value" Type="Urho.IntVector2" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Set a user variable.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVar">
      <MemberSignature Language="C#" Value="public void SetVar (Urho.StringHash key, Urho.Matrix3x4 value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVar(valuetype Urho.StringHash key, valuetype Urho.Matrix3x4 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Urho.StringHash" />
        <Parameter Name="value" Type="Urho.Matrix3x4" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVar">
      <MemberSignature Language="C#" Value="public void SetVar (Urho.StringHash key, Urho.Matrix4 value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVar(valuetype Urho.StringHash key, valuetype Urho.Matrix4 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Urho.StringHash" />
        <Parameter Name="value" Type="Urho.Matrix4" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVar">
      <MemberSignature Language="C#" Value="public void SetVar (Urho.StringHash key, Urho.Quaternion value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVar(valuetype Urho.StringHash key, valuetype Urho.Quaternion value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Urho.StringHash" />
        <Parameter Name="value" Type="Urho.Quaternion" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Set a user variable.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVar">
      <MemberSignature Language="C#" Value="public void SetVar (Urho.StringHash key, Urho.Vector2 value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVar(valuetype Urho.StringHash key, valuetype Urho.Vector2 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Urho.StringHash" />
        <Parameter Name="value" Type="Urho.Vector2" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Set a user variable.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVar">
      <MemberSignature Language="C#" Value="public void SetVar (Urho.StringHash key, Urho.Vector3 value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVar(valuetype Urho.StringHash key, valuetype Urho.Vector3 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Urho.StringHash" />
        <Parameter Name="value" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Set a user variable.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVar">
      <MemberSignature Language="C#" Value="public void SetVar (Urho.StringHash key, Urho.Vector4 value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVar(valuetype Urho.StringHash key, valuetype Urho.Vector4 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Urho.StringHash" />
        <Parameter Name="value" Type="Urho.Vector4" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Set a user variable.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWorldDirection">
      <MemberSignature Language="C#" Value="public void SetWorldDirection (Urho.Vector3 direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWorldDirection(valuetype Urho.Vector3 direction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="direction">To be added.</param>
        <summary>
            Set forward direction in world space.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWorldPosition">
      <MemberSignature Language="C#" Value="public void SetWorldPosition (Urho.Vector3 position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWorldPosition(valuetype Urho.Vector3 position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <summary>
            Set position in world space.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWorldPosition2D">
      <MemberSignature Language="C#" Value="public void SetWorldPosition2D (Urho.Vector2 position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWorldPosition2D(valuetype Urho.Vector2 position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Urho.Vector2" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <summary>
            Set position in world space (for Urho2D).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWorldPosition2D">
      <MemberSignature Language="C#" Value="public void SetWorldPosition2D (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWorldPosition2D(float32 x, float32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>
            Set position in world space (for Urho2D).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWorldRotation">
      <MemberSignature Language="C#" Value="public void SetWorldRotation (Urho.Quaternion rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWorldRotation(valuetype Urho.Quaternion rotation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rotation" Type="Urho.Quaternion" />
      </Parameters>
      <Docs>
        <param name="rotation">To be added.</param>
        <summary>
            Set rotation in world space.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWorldScale">
      <MemberSignature Language="C#" Value="public void SetWorldScale (float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWorldScale(float32 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="scale">To be added.</param>
        <summary>
            Set uniform scale in world space.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWorldScale">
      <MemberSignature Language="C#" Value="public void SetWorldScale (Urho.Vector3 scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWorldScale(valuetype Urho.Vector3 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="scale">To be added.</param>
        <summary>
            Set scale in world space.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWorldScale2D">
      <MemberSignature Language="C#" Value="public void SetWorldScale2D (Urho.Vector2 scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWorldScale2D(valuetype Urho.Vector2 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="Urho.Vector2" />
      </Parameters>
      <Docs>
        <param name="scale">To be added.</param>
        <summary>
            Set scale in world space (for Urho2D).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWorldScale2D">
      <MemberSignature Language="C#" Value="public void SetWorldScale2D (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWorldScale2D(float32 x, float32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>
            Set scale in world space (for Urho2D).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWorldTransform">
      <MemberSignature Language="C#" Value="public void SetWorldTransform (Urho.Vector3 position, Urho.Quaternion rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWorldTransform(valuetype Urho.Vector3 position, valuetype Urho.Quaternion rotation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Urho.Vector3" />
        <Parameter Name="rotation" Type="Urho.Quaternion" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <param name="rotation">To be added.</param>
        <summary>
            Set both position and rotation in world space as an atomic operation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWorldTransform">
      <MemberSignature Language="C#" Value="public void SetWorldTransform (Urho.Vector3 position, Urho.Quaternion rotation, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWorldTransform(valuetype Urho.Vector3 position, valuetype Urho.Quaternion rotation, float32 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Urho.Vector3" />
        <Parameter Name="rotation" Type="Urho.Quaternion" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <param name="rotation">To be added.</param>
        <param name="scale">To be added.</param>
        <summary>
            Set both position, rotation and uniform scale in world space as an atomic operation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWorldTransform">
      <MemberSignature Language="C#" Value="public void SetWorldTransform (Urho.Vector3 position, Urho.Quaternion rotation, Urho.Vector3 scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWorldTransform(valuetype Urho.Vector3 position, valuetype Urho.Quaternion rotation, valuetype Urho.Vector3 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Urho.Vector3" />
        <Parameter Name="rotation" Type="Urho.Quaternion" />
        <Parameter Name="scale" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <param name="rotation">To be added.</param>
        <param name="scale">To be added.</param>
        <summary>
            Set both position, rotation and scale in world space as an atomic opration.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWorldTransform2D">
      <MemberSignature Language="C#" Value="public void SetWorldTransform2D (Urho.Vector2 position, float rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWorldTransform2D(valuetype Urho.Vector2 position, float32 rotation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Urho.Vector2" />
        <Parameter Name="rotation" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <param name="rotation">To be added.</param>
        <summary>
            Set both position and rotation in world space as an atomic operation (for Urho2D).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWorldTransform2D">
      <MemberSignature Language="C#" Value="public void SetWorldTransform2D (Urho.Vector2 position, float rotation, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWorldTransform2D(valuetype Urho.Vector2 position, float32 rotation, float32 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Urho.Vector2" />
        <Parameter Name="rotation" Type="System.Single" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <param name="rotation">To be added.</param>
        <param name="scale">To be added.</param>
        <summary>
            Set both position, rotation and uniform scale in world space as an atomic operation (for Urho2D).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWorldTransform2D">
      <MemberSignature Language="C#" Value="public void SetWorldTransform2D (Urho.Vector2 position, float rotation, Urho.Vector2 scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWorldTransform2D(valuetype Urho.Vector2 position, float32 rotation, valuetype Urho.Vector2 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Urho.Vector2" />
        <Parameter Name="rotation" Type="System.Single" />
        <Parameter Name="scale" Type="Urho.Vector2" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <param name="rotation">To be added.</param>
        <param name="scale">To be added.</param>
        <summary>
            Set both position, rotation and scale in world space as an atomic opration (for Urho2D).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubscribeToAnimationTrigger">
      <MemberSignature Language="C#" Value="public Urho.Subscription SubscribeToAnimationTrigger (Action&lt;Urho.AnimationTriggerEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Urho.Subscription SubscribeToAnimationTrigger(class System.Action`1&lt;valuetype Urho.AnimationTriggerEventArgs&gt; handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Subscription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Action&lt;Urho.AnimationTriggerEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">The handler to invoke when this event is raised.</param>
        <summary>Subscribes to the AnimationTrigger event raised by the Node.</summary>
        <returns>Returns an Urho.Subscription that can be used to cancel the subscription.</returns>
        <remarks>
          <para>This method will override any prior subscription, including those assigned to on event handlers.</para>
          <para>This has the advantage that it does a straight connection and returns a handle that is easy to unsubscribe from.</para>
          <para>For a more event-like approach, use the <see cref="E:Urho.Node.AnimationTrigger" /> event.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubscribeToBoneHierarchyCreated">
      <MemberSignature Language="C#" Value="public Urho.Subscription SubscribeToBoneHierarchyCreated (Action&lt;Urho.BoneHierarchyCreatedEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Urho.Subscription SubscribeToBoneHierarchyCreated(class System.Action`1&lt;valuetype Urho.BoneHierarchyCreatedEventArgs&gt; handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Subscription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Action&lt;Urho.BoneHierarchyCreatedEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">The handler to invoke when this event is raised.</param>
        <summary>Subscribes to the BoneHierarchyCreated event raised by the Node.</summary>
        <returns>Returns an Urho.Subscription that can be used to cancel the subscription.</returns>
        <remarks>
          <para>This method will override any prior subscription, including those assigned to on event handlers.</para>
          <para>This has the advantage that it does a straight connection and returns a handle that is easy to unsubscribe from.</para>
          <para>For a more event-like approach, use the <see cref="E:Urho.Node.BoneHierarchyCreated" /> event.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubscribeToNodeCollision">
      <MemberSignature Language="C#" Value="public Urho.Subscription SubscribeToNodeCollision (Action&lt;Urho.NodeCollisionEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Urho.Subscription SubscribeToNodeCollision(class System.Action`1&lt;valuetype Urho.NodeCollisionEventArgs&gt; handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Subscription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Action&lt;Urho.NodeCollisionEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">The handler to invoke when this event is raised.</param>
        <summary>Subscribes to the NodeCollision event raised by the Node.</summary>
        <returns>Returns an Urho.Subscription that can be used to cancel the subscription.</returns>
        <remarks>
          <para>This method will override any prior subscription, including those assigned to on event handlers.</para>
          <para>This has the advantage that it does a straight connection and returns a handle that is easy to unsubscribe from.</para>
          <para>For a more event-like approach, use the <see cref="E:Urho.Node.NodeCollision" /> event.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubscribeToNodeCollisionEnd">
      <MemberSignature Language="C#" Value="public Urho.Subscription SubscribeToNodeCollisionEnd (Action&lt;Urho.NodeCollisionEndEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Urho.Subscription SubscribeToNodeCollisionEnd(class System.Action`1&lt;valuetype Urho.NodeCollisionEndEventArgs&gt; handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Subscription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Action&lt;Urho.NodeCollisionEndEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">The handler to invoke when this event is raised.</param>
        <summary>Subscribes to the NodeCollisionEnd event raised by the Node.</summary>
        <returns>Returns an Urho.Subscription that can be used to cancel the subscription.</returns>
        <remarks>
          <para>This method will override any prior subscription, including those assigned to on event handlers.</para>
          <para>This has the advantage that it does a straight connection and returns a handle that is easy to unsubscribe from.</para>
          <para>For a more event-like approach, use the <see cref="E:Urho.Node.NodeCollisionEnd" /> event.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubscribeToNodeCollisionStart">
      <MemberSignature Language="C#" Value="public Urho.Subscription SubscribeToNodeCollisionStart (Action&lt;Urho.NodeCollisionStartEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Urho.Subscription SubscribeToNodeCollisionStart(class System.Action`1&lt;valuetype Urho.NodeCollisionStartEventArgs&gt; handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Subscription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Action&lt;Urho.NodeCollisionStartEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">The handler to invoke when this event is raised.</param>
        <summary>Subscribes to the NodeCollisionStart event raised by the Node.</summary>
        <returns>Returns an Urho.Subscription that can be used to cancel the subscription.</returns>
        <remarks>
          <para>This method will override any prior subscription, including those assigned to on event handlers.</para>
          <para>This has the advantage that it does a straight connection and returns a handle that is easy to unsubscribe from.</para>
          <para>For a more event-like approach, use the <see cref="E:Urho.Node.NodeCollisionStart" /> event.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public Urho.Matrix3x4 Transform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Matrix3x4 Transform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Matrix3x4</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return parent space transform matrix.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (Urho.Vector3 delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(valuetype Urho.Vector3 delta) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delta" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="delta">The translation delta to apply.</param>
        <summary>
          <para>Move the scene node in the chosen transform space.</para>
        </summary>
        <remarks>This translates using the <see cref="E:Urho.TransformSpace.Local" /> value.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (Urho.Vector3 delta, Urho.TransformSpace space);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(valuetype Urho.Vector3 delta, valuetype Urho.TransformSpace space) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delta" Type="Urho.Vector3" />
        <Parameter Name="space" Type="Urho.TransformSpace" />
      </Parameters>
      <Docs>
        <param name="delta">The translation delta to apply.</param>
        <param name="space">To be added.</param>
        <summary>
            Move the scene node in the chosen transform space.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate2D">
      <MemberSignature Language="C#" Value="public void Translate2D (Urho.Vector2 delta, Urho.TransformSpace space);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate2D(valuetype Urho.Vector2 delta, valuetype Urho.TransformSpace space) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delta" Type="Urho.Vector2" />
        <Parameter Name="space" Type="Urho.TransformSpace" />
      </Parameters>
      <Docs>
        <param name="delta">To be added.</param>
        <param name="space">To be added.</param>
        <summary>
            Move the scene node in the chosen transform space (for Urho2D).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public override Urho.StringHash Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.StringHash Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.StringHash</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's type system type.</summary>
        <value>StringHash representing the type for this C# type.</value>
        <remarks>This returns the Urho's type and is surfaced for low-level Urho code.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public override string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's low-level type name.</summary>
        <value>Stringified low-level type name.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeNameStatic">
      <MemberSignature Language="C#" Value="public static string TypeNameStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string TypeNameStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's low-level type name, accessible as a static method.</summary>
        <value>Stringified low-level type name.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeStatic">
      <MemberSignature Language="C#" Value="public static Urho.StringHash TypeStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Urho.StringHash TypeStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.StringHash</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's low-level type, accessible as a static method.</summary>
        <value>This returns the Urho's type and is surface for the low-level Urho code.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Up">
      <MemberSignature Language="C#" Value="public Urho.Vector3 Up { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector3 Up" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return up direction in parent space. Positive Y axis equals identity rotation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorldDirection">
      <MemberSignature Language="C#" Value="public Urho.Vector3 WorldDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector3 WorldDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return direction in world space.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorldPosition">
      <MemberSignature Language="C#" Value="public Urho.Vector3 WorldPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector3 WorldPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return position in world space.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorldPosition2D">
      <MemberSignature Language="C#" Value="public Urho.Vector2 WorldPosition2D { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector2 WorldPosition2D" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return position in world space (for Urho2D).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorldRight">
      <MemberSignature Language="C#" Value="public Urho.Vector3 WorldRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector3 WorldRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return node's right vector in world space.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorldRotation">
      <MemberSignature Language="C#" Value="public Urho.Quaternion WorldRotation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Quaternion WorldRotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Quaternion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return rotation in world space.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorldRotation2D">
      <MemberSignature Language="C#" Value="public float WorldRotation2D { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 WorldRotation2D" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return rotation in world space (for Urho2D).
            Or
            Set rotation in world space (for Urho2D).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorldScale">
      <MemberSignature Language="C#" Value="public Urho.Vector3 WorldScale { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector3 WorldScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return scale in world space.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorldScale2D">
      <MemberSignature Language="C#" Value="public Urho.Vector2 WorldScale2D { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector2 WorldScale2D" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return scale in world space (for Urho2D).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorldToLocal">
      <MemberSignature Language="C#" Value="public Urho.Vector3 WorldToLocal (Urho.Vector3 position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Urho.Vector3 WorldToLocal(valuetype Urho.Vector3 position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <summary>
            Convert a world space position to local space.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorldToLocal">
      <MemberSignature Language="C#" Value="public Urho.Vector3 WorldToLocal (Urho.Vector4 vector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Urho.Vector3 WorldToLocal(valuetype Urho.Vector4 vector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="Urho.Vector4" />
      </Parameters>
      <Docs>
        <param name="vector">To be added.</param>
        <summary>
            Convert a world space position or rotation to local space.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorldToLocal2D">
      <MemberSignature Language="C#" Value="public Urho.Vector2 WorldToLocal2D (Urho.Vector2 vector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Urho.Vector2 WorldToLocal2D(valuetype Urho.Vector2 vector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="Urho.Vector2" />
      </Parameters>
      <Docs>
        <param name="vector">To be added.</param>
        <summary>
            Convert a world space position or rotation to local space (for Urho2D).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorldTransform">
      <MemberSignature Language="C#" Value="public Urho.Matrix3x4 WorldTransform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Matrix3x4 WorldTransform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Matrix3x4</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorldUp">
      <MemberSignature Language="C#" Value="public Urho.Vector3 WorldUp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector3 WorldUp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return node's up vector in world space.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Yaw">
      <MemberSignature Language="C#" Value="public void Yaw (float angle, Urho.TransformSpace space);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Yaw(float32 angle, valuetype Urho.TransformSpace space) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="space" Type="Urho.TransformSpace" />
      </Parameters>
      <Docs>
        <param name="angle">To be added.</param>
        <param name="space">To be added.</param>
        <summary>
            Rotate around the Y axis.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
