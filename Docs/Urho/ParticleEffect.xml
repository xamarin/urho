<Type Name="ParticleEffect" FullName="Urho.ParticleEffect">
  <TypeSignature Language="C#" Value="public class ParticleEffect : Urho.Resources.Resource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParticleEffect extends Urho.Resources.Resource" />
  <AssemblyInfo>
    <AssemblyName>Urho</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Urho.Resources.Resource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Particle effect definition.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParticleEffect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <para>Constructs a new instance of Urho.ParticleEffect which is tied to the <see cref="P:Urho.Application.CurrentContext" />.</para>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParticleEffect (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer to the raw unmanaged Urho object.</param>
        <summary>Constructs a new instance of Urho.ParticleEffect, given a raw pointer to an unmanaged object</summary>
        <remarks>
          <para>This creates a new managed wrapper for the type using the raw pointer to an unmanaged object.</para>
          <para>Objects that are created in this fashion get registered with the UrhoSharp runtime.</para>
          <para>This is intended to be used by the UrhoSharp runtime, and is not intended to be used by users.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParticleEffect (Urho.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Urho.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="Urho.Context" />
      </Parameters>
      <Docs>
        <param name="context">The context that this object will be attached to.</param>
        <summary>
          <para>Constructs a new instance of Urho.ParticleEffect linked to a specific <see cref="T:Urho.Context" />.</para>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ParticleEffect (Urho.UrhoObjectFlag emptyFlag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype Urho.UrhoObjectFlag emptyFlag) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="emptyFlag" Type="Urho.UrhoObjectFlag" />
      </Parameters>
      <Docs>
        <param name="emptyFlag">Pass UrhoObjectFlag.Empty.</param>
        <summary>Empty constructor, chain to this constructor when you provide your own constructor that sets the handle field.</summary>
        <remarks>
          <para>This constructor should be invoked by your code if you provide your own constructor that sets the handle field.</para>
          <para>This essentially circumvents the default path that creates a new object and sets the handle and does not call RegisterObject on the target, you must do this on your own constructor.</para>
          <para>You would typically chain to this constructor from your own, and then set the handle to the unmanaged object from your code, and then register your object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveTime">
      <MemberSignature Language="C#" Value="public float ActiveTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ActiveTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return emission active period length (0 = infinite.)
            Or
            Set emission active period length (0 = infinite.)
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddColorTime">
      <MemberSignature Language="C#" Value="public void AddColorTime (Urho.Color color, float time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddColorTime(valuetype Urho.Color color, float32 time) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Urho.Color" />
        <Parameter Name="time" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <param name="time">To be added.</param>
        <summary>
            Add a color frame sorted in the correct position based on time.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnimationLodBias">
      <MemberSignature Language="C#" Value="public float AnimationLodBias { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 AnimationLodBias" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return animation Lod bias.
            Or
            Set animation LOD bias.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public override bool BeginLoad (Urho.IO.File source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool BeginLoad(class Urho.IO.File source) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Urho.IO.File" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public Urho.ParticleEffect Clone (string cloneName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Urho.ParticleEffect Clone(string cloneName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.ParticleEffect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cloneName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cloneName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstantForce">
      <MemberSignature Language="C#" Value="public Urho.Vector3 ConstantForce { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector3 ConstantForce" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return constant force acting on particles.
            Or
            Set constant force acting on particles.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DampingForce">
      <MemberSignature Language="C#" Value="public float DampingForce { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 DampingForce" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return particle velocity damping force.
            Or
            Set particle velocity damping force.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitterSize">
      <MemberSignature Language="C#" Value="public Urho.Vector3 EmitterSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector3 EmitterSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return emitter size.
            Or
            Set emitter size.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitterType">
      <MemberSignature Language="C#" Value="public Urho.EmitterType EmitterType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.EmitterType EmitterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.EmitterType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return emitter type.
            Or
            Set emitter type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoad">
      <MemberSignature Language="C#" Value="public override bool EndLoad ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool EndLoad() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Finish resource loading. Always called from the main thread. Return true if successful.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FaceCameraMode">
      <MemberSignature Language="C#" Value="public Urho.FaceCameraMode FaceCameraMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.FaceCameraMode FaceCameraMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.FaceCameraMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedScreenSize">
      <MemberSignature Language="C#" Value="public bool FixedScreenSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FixedScreenSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColorFrame">
      <MemberSignature Language="C#" Value="public Urho.ColorFrame* GetColorFrame (uint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Urho.ColorFrame* GetColorFrame(unsigned int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.ColorFrame*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>
            Return a color animation frame, or null if outside range.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextureFrame">
      <MemberSignature Language="C#" Value="public Urho.TextureFrame* GetTextureFrame (uint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Urho.TextureFrame* GetTextureFrame(unsigned int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.TextureFrame*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>
            Return a texture animation frame, or null if outside range.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InactiveTime">
      <MemberSignature Language="C#" Value="public float InactiveTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 InactiveTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return emission inactive period length (0 = infinite.)
            Or
            Set emission inactive period length (0 = infinite.)
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public bool Load (Urho.Resources.XmlElement source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Load(class Urho.Resources.XmlElement source) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Urho.Resources.XmlElement" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Material">
      <MemberSignature Language="C#" Value="public Urho.Material Material { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Urho.Material Material" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Material</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return material.
            Or
            Set material.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDirection">
      <MemberSignature Language="C#" Value="public Urho.Vector3 MaxDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector3 MaxDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return positive direction limit.
            Or
            Set positive direction limit.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxEmissionRate">
      <MemberSignature Language="C#" Value="public float MaxEmissionRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MaxEmissionRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return maximum emission rate.
            Or
            Set maximum emission rate.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxParticleSize">
      <MemberSignature Language="C#" Value="public Urho.Vector2 MaxParticleSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector2 MaxParticleSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return particle maximum size.
            Or
            Set particle maximum size.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRotation">
      <MemberSignature Language="C#" Value="public float MaxRotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MaxRotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return particle maximum rotation.
            Or
            Set particle maximum rotation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRotationSpeed">
      <MemberSignature Language="C#" Value="public float MaxRotationSpeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MaxRotationSpeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return particle maximum rotation speed.
            Or
            Set particle maximum rotation speed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxTimeToLive">
      <MemberSignature Language="C#" Value="public float MaxTimeToLive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MaxTimeToLive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return particle maximum time to live.
            Or
            Set particle maximum time to live.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxVelocity">
      <MemberSignature Language="C#" Value="public float MaxVelocity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MaxVelocity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return particle maximum velocity.
            Or
            Set particle maximum velocity.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinDirection">
      <MemberSignature Language="C#" Value="public Urho.Vector3 MinDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector3 MinDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return negative direction limit.
            Or
            Set negative direction limit.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinEmissionRate">
      <MemberSignature Language="C#" Value="public float MinEmissionRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MinEmissionRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return minimum emission rate.
            Or
            Set minimum emission rate.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinParticleSize">
      <MemberSignature Language="C#" Value="public Urho.Vector2 MinParticleSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector2 MinParticleSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return particle minimum size.
            Or
            Set particle minimum size.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRotation">
      <MemberSignature Language="C#" Value="public float MinRotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MinRotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return particle minimum rotation.
            Or
            Set particle minimum rotation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRotationSpeed">
      <MemberSignature Language="C#" Value="public float MinRotationSpeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MinRotationSpeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return particle minimum rotation speed.
            Or
            Set particle minimum rotation speed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinTimeToLive">
      <MemberSignature Language="C#" Value="public float MinTimeToLive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MinTimeToLive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return particle minimum time to live.
            Or
            Set particle minimum time to live.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinVelocity">
      <MemberSignature Language="C#" Value="public float MinVelocity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MinVelocity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return particle minimum velocity.
            Or
            Set particle minimum velocity.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumColorFrames">
      <MemberSignature Language="C#" Value="public uint NumColorFrames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 NumColorFrames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return number of color animation frames.
            Or
            Set number of color frames.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumParticles">
      <MemberSignature Language="C#" Value="public uint NumParticles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 NumParticles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return maximum number of particles.
            Or
            Set maximum number of particles.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumTextureFrames">
      <MemberSignature Language="C#" Value="public uint NumTextureFrames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 NumTextureFrames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return number of texture animation frames.
            Or
            Set number of texture frames.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RandomDirection">
      <MemberSignature Language="C#" Value="public Urho.Vector3 RandomDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector3 RandomDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return random direction.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RandomRotation">
      <MemberSignature Language="C#" Value="public float RandomRotation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 RandomRotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return random rotation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RandomRotationSpeed">
      <MemberSignature Language="C#" Value="public float RandomRotationSpeed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 RandomRotationSpeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return random rotationspeed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RandomSize">
      <MemberSignature Language="C#" Value="public Urho.Vector2 RandomSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector2 RandomSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return random size.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RandomTimeToLive">
      <MemberSignature Language="C#" Value="public float RandomTimeToLive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 RandomTimeToLive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return random timetolive.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RandomVelocity">
      <MemberSignature Language="C#" Value="public float RandomVelocity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 RandomVelocity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return random velocity.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public static void RegisterObject (Urho.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterObject(class Urho.Context context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Urho.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
            Register object factory.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Relative">
      <MemberSignature Language="C#" Value="public bool Relative { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Relative" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determines whether billboards are relative to the scene node.</summary>
        <value>This defaults to true.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveColorFrame">
      <MemberSignature Language="C#" Value="public void RemoveColorFrame (uint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveColorFrame(unsigned int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>
            Remove color frame at index
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTextureFrame">
      <MemberSignature Language="C#" Value="public void RemoveTextureFrame (uint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveTextureFrame(unsigned int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>
            Remove texture frame at index
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override bool Save (Urho.IO.File dest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Save(class Urho.IO.File dest) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="Urho.IO.File" />
      </Parameters>
      <Docs>
        <param name="dest">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public bool Save (Urho.Resources.XmlElement dest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Save(class Urho.Resources.XmlElement dest) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="Urho.Resources.XmlElement" />
      </Parameters>
      <Docs>
        <param name="dest">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scaled">
      <MemberSignature Language="C#" Value="public bool Scaled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scaled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determines whether scene node scale affects billboards' size.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeAdd">
      <MemberSignature Language="C#" Value="public float SizeAdd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 SizeAdd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return particle size additive modifier.
            Or
            Set particle size additive modifier.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeMul">
      <MemberSignature Language="C#" Value="public float SizeMul { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 SizeMul" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return particle size multiplicative modifier.
            Or
            Set particle size multiplicative modifier.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortColorFrames">
      <MemberSignature Language="C#" Value="public void SortColorFrames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SortColorFrames() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Sort the list of color frames based on time.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public bool Sorted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Sorted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determines whether billboards are sorted.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortTextureFrames">
      <MemberSignature Language="C#" Value="public void SortTextureFrames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SortTextureFrames() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Sort the list of texture frames based on time.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public override Urho.StringHash Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.StringHash Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.StringHash</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's type system type.</summary>
        <value>StringHash representing the type for this C# type.</value>
        <remarks>This returns the Urho's type and is surfaced for low-level Urho code.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public override string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's low-level type name.</summary>
        <value>Stringified low-level type name.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeNameStatic">
      <MemberSignature Language="C#" Value="public static string TypeNameStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string TypeNameStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's low-level type name, accessible as a static method.</summary>
        <value>Stringified low-level type name.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeStatic">
      <MemberSignature Language="C#" Value="public static Urho.StringHash TypeStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Urho.StringHash TypeStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.StringHash</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's low-level type, accessible as a static method.</summary>
        <value>This returns the Urho's type and is surface for the low-level Urho code.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateInvisible">
      <MemberSignature Language="C#" Value="public bool UpdateInvisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UpdateInvisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return whether to update when particles are not visible.
            Or
            Set whether to update when particles are not visible.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
