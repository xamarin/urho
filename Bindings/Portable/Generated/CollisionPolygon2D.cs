// WARNING - AUTOGENERATED - DO NOT EDIT
// 
// Generated using `sharpie urho`
// 
// CollisionPolygon2D.cs
// 
// Copyright 2015 Xamarin Inc. All rights reserved.

using System;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Urho.Urho2D;
using Urho.Gui;
using Urho.Resources;
using Urho.IO;
using Urho.Navigation;
using Urho.Network;

namespace Urho.Urho2D
{
	/// <summary>
	/// 2D polygon collision component.
	/// </summary>
	public unsafe partial class CollisionPolygon2D : CollisionShape2D
	{
		public CollisionPolygon2D (IntPtr handle) : base (handle)
		{
		}

		protected CollisionPolygon2D (UrhoObjectFlag emptyFlag) : base (emptyFlag)
		{
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern int CollisionPolygon2D_GetType (IntPtr handle);

		private StringHash UrhoGetType ()
		{
			Runtime.ValidateRefCounted (this);
			return new StringHash (CollisionPolygon2D_GetType (handle));
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr CollisionPolygon2D_GetTypeName (IntPtr handle);

		private string GetTypeName ()
		{
			Runtime.ValidateRefCounted (this);
			return Marshal.PtrToStringAnsi (CollisionPolygon2D_GetTypeName (handle));
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern int CollisionPolygon2D_GetTypeStatic ();

		private static StringHash GetTypeStatic ()
		{
			Runtime.Validate (typeof(CollisionPolygon2D));
			return new StringHash (CollisionPolygon2D_GetTypeStatic ());
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr CollisionPolygon2D_GetTypeNameStatic ();

		private static string GetTypeNameStatic ()
		{
			Runtime.Validate (typeof(CollisionPolygon2D));
			return Marshal.PtrToStringAnsi (CollisionPolygon2D_GetTypeNameStatic ());
		}

		public CollisionPolygon2D () : this (Application.CurrentContext)
		{
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr CollisionPolygon2D_CollisionPolygon2D (IntPtr context);

		public CollisionPolygon2D (Context context) : base (UrhoObjectFlag.Empty)
		{
			Runtime.Validate (typeof(CollisionPolygon2D));
			handle = CollisionPolygon2D_CollisionPolygon2D ((object)context == null ? IntPtr.Zero : context.Handle);
			Runtime.RegisterObject (this);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void CollisionPolygon2D_RegisterObject (IntPtr context);

		/// <summary>
		/// Register object factory.
		/// </summary>
		public new static void RegisterObject (Context context)
		{
			Runtime.Validate (typeof(CollisionPolygon2D));
			CollisionPolygon2D_RegisterObject ((object)context == null ? IntPtr.Zero : context.Handle);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void CollisionPolygon2D_SetVertexCount (IntPtr handle, uint count);

		/// <summary>
		/// Set vertex count.
		/// </summary>
		private void SetVertexCount (uint count)
		{
			Runtime.ValidateRefCounted (this);
			CollisionPolygon2D_SetVertexCount (handle, count);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void CollisionPolygon2D_SetVertex (IntPtr handle, uint index, ref Urho.Vector2 vertex);

		/// <summary>
		/// Set vertex.
		/// </summary>
		public void SetVertex (uint index, Urho.Vector2 vertex)
		{
			Runtime.ValidateRefCounted (this);
			CollisionPolygon2D_SetVertex (handle, index, ref vertex);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern uint CollisionPolygon2D_GetVertexCount (IntPtr handle);

		/// <summary>
		/// Return vertex count.
		/// </summary>
		private uint GetVertexCount ()
		{
			Runtime.ValidateRefCounted (this);
			return CollisionPolygon2D_GetVertexCount (handle);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern Urho.Vector2 CollisionPolygon2D_GetVertex (IntPtr handle, uint index);

		/// <summary>
		/// Return vertex.
		/// </summary>
		public Urho.Vector2 GetVertex (uint index)
		{
			Runtime.ValidateRefCounted (this);
			return CollisionPolygon2D_GetVertex (handle, index);
		}

		public override StringHash Type {
			get {
				return UrhoGetType ();
			}
		}

		public override string TypeName {
			get {
				return GetTypeName ();
			}
		}

		public new static StringHash TypeStatic {
			get {
				return GetTypeStatic ();
			}
		}

		public new static string TypeNameStatic {
			get {
				return GetTypeNameStatic ();
			}
		}

		/// <summary>
		/// Return vertex count.
		/// Or
		/// Set vertex count.
		/// </summary>
		public uint VertexCount {
			get {
				return GetVertexCount ();
			}
			set {
				SetVertexCount (value);
			}
		}
	}
}
