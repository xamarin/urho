// WARNING - AUTOGENERATED - DO NOT EDIT
// 
// Generated using `sharpie urho`
// 
// OggVorbisSoundStream.cs
// 
// Copyright 2015 Xamarin Inc. All rights reserved.

using System;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Urho.Urho2D;
using Urho.Gui;
using Urho.Resources;
using Urho.IO;
using Urho.Navigation;
using Urho.Network;

namespace Urho.Audio
{
	/// <summary>
	/// Ogg Vorbis sound stream.
	/// </summary>
	public unsafe partial class OggVorbisSoundStream : SoundStream
	{
		public OggVorbisSoundStream (IntPtr handle) : base (handle)
		{
		}

		protected OggVorbisSoundStream (UrhoObjectFlag emptyFlag) : base (emptyFlag)
		{
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr OggVorbisSoundStream_OggVorbisSoundStream (IntPtr sound);

		public OggVorbisSoundStream (Sound sound) : base (UrhoObjectFlag.Empty)
		{
			Runtime.Validate (typeof(OggVorbisSoundStream));
			handle = OggVorbisSoundStream_OggVorbisSoundStream ((object)sound == null ? IntPtr.Zero : sound.Handle);
			Runtime.RegisterObject (this);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern uint OggVorbisSoundStream_GetData (IntPtr handle, sbyte* dest, uint numBytes);

		/// <summary>
		/// Produce sound data into destination. Return number of bytes produced. Called by SoundSource from the mixing thread.
		/// </summary>
		public override uint GetData (sbyte* dest, uint numBytes)
		{
			Runtime.ValidateRefCounted (this);
			return OggVorbisSoundStream_GetData (handle, dest, numBytes);
		}
	}
}
