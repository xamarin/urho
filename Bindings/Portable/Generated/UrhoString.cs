// WARNING - AUTOGENERATED - DO NOT EDIT
// 
// Generated using `sharpie urho`
// 
// UrhoString.cs
// 
// Copyright 2015 Xamarin Inc. All rights reserved.

using System;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Urho.Urho2D;
using Urho.Gui;
using Urho.Resources;
using Urho.IO;
using Urho.Navigation;
using Urho.Network;

namespace Urho
{
	/// <summary>
	/// %String class.
	/// </summary>
	public unsafe partial class UrhoString
	{
		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr UrhoString_String ();

		public UrhoString ()
		{
			Runtime.Validate (typeof(UrhoString));
			handle = UrhoString_String ();
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr UrhoString_String0 (string str);

		public UrhoString (string str)
		{
			Runtime.Validate (typeof(UrhoString));
			handle = UrhoString_String0 (str);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr UrhoString_String1 (int value);

		public UrhoString (int value)
		{
			Runtime.Validate (typeof(UrhoString));
			handle = UrhoString_String1 (value);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr UrhoString_String2 (short value);

		public UrhoString (short value)
		{
			Runtime.Validate (typeof(UrhoString));
			handle = UrhoString_String2 (value);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr UrhoString_String3 (System.nint value);

		public UrhoString (System.nint value)
		{
			Runtime.Validate (typeof(UrhoString));
			handle = UrhoString_String3 (value);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr UrhoString_String4 (long value);

		public UrhoString (long value)
		{
			Runtime.Validate (typeof(UrhoString));
			handle = UrhoString_String4 (value);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr UrhoString_String5 (uint value);

		public UrhoString (uint value)
		{
			Runtime.Validate (typeof(UrhoString));
			handle = UrhoString_String5 (value);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr UrhoString_String6 (ushort value);

		public UrhoString (ushort value)
		{
			Runtime.Validate (typeof(UrhoString));
			handle = UrhoString_String6 (value);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr UrhoString_String7 (System.nuint value);

		public UrhoString (System.nuint value)
		{
			Runtime.Validate (typeof(UrhoString));
			handle = UrhoString_String7 (value);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr UrhoString_String8 (ulong value);

		public UrhoString (ulong value)
		{
			Runtime.Validate (typeof(UrhoString));
			handle = UrhoString_String8 (value);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr UrhoString_String9 (float value);

		public UrhoString (float value)
		{
			Runtime.Validate (typeof(UrhoString));
			handle = UrhoString_String9 (value);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr UrhoString_String10 (double value);

		public UrhoString (double value)
		{
			Runtime.Validate (typeof(UrhoString));
			handle = UrhoString_String10 (value);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr UrhoString_String11 (bool value);

		public UrhoString (bool value)
		{
			Runtime.Validate (typeof(UrhoString));
			handle = UrhoString_String11 (value);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void UrhoString_Replace (IntPtr handle, string replaceThis, string replaceWith, bool caseSensitive);

		/// <summary>
		/// Replace all occurrences of a string.
		/// </summary>
		public void Replace (string replaceThis, string replaceWith, bool caseSensitive)
		{
			Runtime.ValidateObject (this);
			UrhoString_Replace (handle, replaceThis, replaceWith, caseSensitive);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void UrhoString_Replace12 (IntPtr handle, uint pos, uint length, string replaceWith);

		/// <summary>
		/// Replace a substring.
		/// </summary>
		public void Replace (uint pos, uint length, string replaceWith)
		{
			Runtime.ValidateObject (this);
			UrhoString_Replace12 (handle, pos, length, replaceWith);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr UrhoString_Replaced (IntPtr handle, string replaceThis, string replaceWith, bool caseSensitive);

		/// <summary>
		/// Return a string with all occurrences of a string replaced.
		/// </summary>
		public string Replaced (string replaceThis, string replaceWith, bool caseSensitive)
		{
			Runtime.ValidateObject (this);
			return Marshal.PtrToStringAnsi (UrhoString_Replaced (handle, replaceThis, replaceWith, caseSensitive));
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void UrhoString_Insert (IntPtr handle, uint pos, string str);

		/// <summary>
		/// Insert a string.
		/// </summary>
		public void Insert (uint pos, string str)
		{
			Runtime.ValidateObject (this);
			UrhoString_Insert (handle, pos, str);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void UrhoString_Erase (IntPtr handle, uint pos, uint length);

		/// <summary>
		/// Erase a substring.
		/// </summary>
		public void Erase (uint pos, uint length)
		{
			Runtime.ValidateObject (this);
			UrhoString_Erase (handle, pos, length);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void UrhoString_Resize (IntPtr handle, uint newLength);

		/// <summary>
		/// Resize the string.
		/// </summary>
		public void Resize (uint newLength)
		{
			Runtime.ValidateObject (this);
			UrhoString_Resize (handle, newLength);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void UrhoString_Reserve (IntPtr handle, uint newCapacity);

		/// <summary>
		/// Set new capacity.
		/// </summary>
		public void Reserve (uint newCapacity)
		{
			Runtime.ValidateObject (this);
			UrhoString_Reserve (handle, newCapacity);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void UrhoString_Compact (IntPtr handle);

		/// <summary>
		/// Reallocate so that no extra memory is used.
		/// </summary>
		public void Compact ()
		{
			Runtime.ValidateObject (this);
			UrhoString_Compact (handle);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void UrhoString_Clear (IntPtr handle);

		/// <summary>
		/// Clear the string.
		/// </summary>
		public void Clear ()
		{
			Runtime.ValidateObject (this);
			UrhoString_Clear (handle);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr UrhoString_Substring (IntPtr handle, uint pos);

		/// <summary>
		/// Return a substring from position to end.
		/// </summary>
		public string Substring (uint pos)
		{
			Runtime.ValidateObject (this);
			return Marshal.PtrToStringAnsi (UrhoString_Substring (handle, pos));
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr UrhoString_Substring13 (IntPtr handle, uint pos, uint length);

		/// <summary>
		/// Return a substring with length from position.
		/// </summary>
		public string Substring (uint pos, uint length)
		{
			Runtime.ValidateObject (this);
			return Marshal.PtrToStringAnsi (UrhoString_Substring13 (handle, pos, length));
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr UrhoString_Trimmed (IntPtr handle);

		/// <summary>
		/// Return string with whitespace trimmed from the beginning and the end.
		/// </summary>
		public string Trimmed ()
		{
			Runtime.ValidateObject (this);
			return Marshal.PtrToStringAnsi (UrhoString_Trimmed (handle));
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr UrhoString_ToUpper (IntPtr handle);

		/// <summary>
		/// Return string in uppercase.
		/// </summary>
		public string ToUpper ()
		{
			Runtime.ValidateObject (this);
			return Marshal.PtrToStringAnsi (UrhoString_ToUpper (handle));
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr UrhoString_ToLower (IntPtr handle);

		/// <summary>
		/// Return string in lowercase.
		/// </summary>
		public string ToLower ()
		{
			Runtime.ValidateObject (this);
			return Marshal.PtrToStringAnsi (UrhoString_ToLower (handle));
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern uint UrhoString_Find (IntPtr handle, string str, uint startPos, bool caseSensitive);

		/// <summary>
		/// Return index to the first occurrence of a string, or NPOS if not found.
		/// </summary>
		public uint Find (string str, uint startPos, bool caseSensitive)
		{
			Runtime.ValidateObject (this);
			return UrhoString_Find (handle, str, startPos, caseSensitive);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern uint UrhoString_FindLast (IntPtr handle, string str, uint startPos, bool caseSensitive);

		/// <summary>
		/// Return index to the last occurrence of a string, or NPOS if not found.
		/// </summary>
		public uint FindLast (string str, uint startPos, bool caseSensitive)
		{
			Runtime.ValidateObject (this);
			return UrhoString_FindLast (handle, str, startPos, caseSensitive);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern bool UrhoString_StartsWith (IntPtr handle, string str, bool caseSensitive);

		/// <summary>
		/// Return whether starts with a string.
		/// </summary>
		public bool StartsWith (string str, bool caseSensitive)
		{
			Runtime.ValidateObject (this);
			return UrhoString_StartsWith (handle, str, caseSensitive);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern bool UrhoString_EndsWith (IntPtr handle, string str, bool caseSensitive);

		/// <summary>
		/// Return whether ends with a string.
		/// </summary>
		public bool EndsWith (string str, bool caseSensitive)
		{
			Runtime.ValidateObject (this);
			return UrhoString_EndsWith (handle, str, caseSensitive);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern uint UrhoString_Length (IntPtr handle);

		/// <summary>
		/// Return length.
		/// </summary>
		public uint Length ()
		{
			Runtime.ValidateObject (this);
			return UrhoString_Length (handle);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern uint UrhoString_Capacity (IntPtr handle);

		/// <summary>
		/// Return buffer capacity.
		/// </summary>
		public uint Capacity ()
		{
			Runtime.ValidateObject (this);
			return UrhoString_Capacity (handle);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern bool UrhoString_Empty (IntPtr handle);

		/// <summary>
		/// Return whether the string is empty.
		/// </summary>
		public bool Empty ()
		{
			Runtime.ValidateObject (this);
			return UrhoString_Empty (handle);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern int UrhoString_Compare (IntPtr handle, string str, bool caseSensitive);

		/// <summary>
		/// Return comparison result with a string.
		/// </summary>
		public int Compare (string str, bool caseSensitive)
		{
			Runtime.ValidateObject (this);
			return UrhoString_Compare (handle, str, caseSensitive);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern bool UrhoString_Contains (IntPtr handle, string str, bool caseSensitive);

		/// <summary>
		/// Return whether contains a specific occurrence of a string.
		/// </summary>
		public bool Contains (string str, bool caseSensitive)
		{
			Runtime.ValidateObject (this);
			return UrhoString_Contains (handle, str, caseSensitive);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern uint UrhoString_LengthUTF8 (IntPtr handle);

		/// <summary>
		/// Calculate number of characters in UTF8 content.
		/// </summary>
		public uint LengthUTF8 ()
		{
			Runtime.ValidateObject (this);
			return UrhoString_LengthUTF8 (handle);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern uint UrhoString_ByteOffsetUTF8 (IntPtr handle, uint index);

		/// <summary>
		/// Return byte offset to char in UTF8 content.
		/// </summary>
		public uint ByteOffsetUTF8 (uint index)
		{
			Runtime.ValidateObject (this);
			return UrhoString_ByteOffsetUTF8 (handle, index);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern uint UrhoString_AtUTF8 (IntPtr handle, uint index);

		/// <summary>
		/// Return Unicode character at index from UTF8 content.
		/// </summary>
		public uint AtUTF8 (uint index)
		{
			Runtime.ValidateObject (this);
			return UrhoString_AtUTF8 (handle, index);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void UrhoString_ReplaceUTF8 (IntPtr handle, uint index, uint unicodeChar);

		/// <summary>
		/// Replace Unicode character at index from UTF8 content.
		/// </summary>
		public void ReplaceUTF8 (uint index, uint unicodeChar)
		{
			Runtime.ValidateObject (this);
			UrhoString_ReplaceUTF8 (handle, index, unicodeChar);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr UrhoString_SubstringUTF8 (IntPtr handle, uint pos);

		/// <summary>
		/// Return a UTF8 substring from position to end.
		/// </summary>
		public string SubstringUTF8 (uint pos)
		{
			Runtime.ValidateObject (this);
			return Marshal.PtrToStringAnsi (UrhoString_SubstringUTF8 (handle, pos));
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr UrhoString_SubstringUTF814 (IntPtr handle, uint pos, uint length);

		/// <summary>
		/// Return a UTF8 substring with length from position.
		/// </summary>
		public string SubstringUTF8 (uint pos, uint length)
		{
			Runtime.ValidateObject (this);
			return Marshal.PtrToStringAnsi (UrhoString_SubstringUTF814 (handle, pos, length));
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern uint UrhoString_ToHash (IntPtr handle);

		/// <summary>
		/// Return hash value for HashSet
		/// &
		/// HashMap.
		/// </summary>
		public uint ToHash ()
		{
			Runtime.ValidateObject (this);
			return UrhoString_ToHash (handle);
		}
	}
}
