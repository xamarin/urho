// WARNING - AUTOGENERATED - DO NOT EDIT
// 
// Generated using `sharpie urho`
// 
// Tile2D.cs
// 
// Copyright 2015 Xamarin Inc. All rights reserved.

using System;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Urho.Urho2D;
using Urho.Gui;
using Urho.Resources;
using Urho.IO;
using Urho.Navigation;
using Urho.Network;

namespace Urho.Urho2D
{
	/// <summary>
	/// Tile define.
	/// </summary>
	public unsafe partial class Tile2D : RefCounted
	{
		public Tile2D (IntPtr handle) : base (handle)
		{
		}

		protected Tile2D (UrhoObjectFlag emptyFlag) : base (emptyFlag)
		{
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr Tile2D_Tile2D ();

		public Tile2D () : base (UrhoObjectFlag.Empty)
		{
			Runtime.Validate (typeof(Tile2D));
			handle = Tile2D_Tile2D ();
			Runtime.RegisterObject (this);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern int Tile2D_GetGid (IntPtr handle);

		/// <summary>
		/// Return gid.
		/// </summary>
		private int GetGid ()
		{
			Runtime.ValidateRefCounted (this);
			return Tile2D_GetGid (handle);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr Tile2D_GetSprite (IntPtr handle);

		/// <summary>
		/// Return sprite.
		/// </summary>
		private Sprite2D GetSprite ()
		{
			Runtime.ValidateRefCounted (this);
			return Runtime.LookupObject<Sprite2D> (Tile2D_GetSprite (handle));
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern bool Tile2D_HasProperty (IntPtr handle, string name);

		/// <summary>
		/// Return has property.
		/// </summary>
		public bool HasProperty (string name)
		{
			Runtime.ValidateRefCounted (this);
			return Tile2D_HasProperty (handle, name);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr Tile2D_GetProperty (IntPtr handle, string name);

		/// <summary>
		/// Return property.
		/// </summary>
		public string GetProperty (string name)
		{
			Runtime.ValidateRefCounted (this);
			return Marshal.PtrToStringAnsi (Tile2D_GetProperty (handle, name));
		}

		/// <summary>
		/// Return gid.
		/// </summary>
		public int Gid {
			get {
				return GetGid ();
			}
		}

		/// <summary>
		/// Return sprite.
		/// </summary>
		public Sprite2D Sprite {
			get {
				return GetSprite ();
			}
		}
	}
}
